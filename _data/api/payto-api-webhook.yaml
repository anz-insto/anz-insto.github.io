openapi: '3.0.1'
info:
  title: Fileactive PayTo API Webhook
  description: |-
    Fileactive PayTo API Webhook provides consumers the ability to receive:<br>
    - Mandate Processing Outcomes
    - Mandate Resolution Notifications
    - MPIR Processing Outcomes
    - PayTo Query Notifications<br><br>

    Payloads will be encrypted and signed prior to transmitting. Customers will need to decrypt the payload and verify the signature prior to processing the Processing Outcome or Notification.<br>
    
    Processing Outcomes and Notifications may arrive out of sequence and may be delivered more than once. ANZ will attempt to deliver each Processing Outcome and Notification at least once.
    
  version: 1.0.0
servers:
  - url: 'https://api.uat.example.com/v1.0'
    description: UAT Environment
  - url: 'https://api.example.com.au/v1.0'
    description: Production Environment
security:
  - apiKeyAuth: []
paths:
  /payto/mandates/outcomes:
    post:
      tags:
      - Mandate
      summary: Mandate Processing Outcomes.
      description: |-
        The purpose of this operation is to provide the processing outcome of the following mandate actions initiated by the **Payee**:<br>
        - Create Mandate
        - Amend Mandate (coming soon)
        - Change Mandate Status
        - Mandate Creation/Amendment Recall (coming soon)<br>

        Duplicate checking should be based on the `request_id`, i.e. the **Payee** identifiyer provided in the original mandate request.
      operationId: mandateOutcomes
      parameters:
        - $ref: "#/components/parameters/requestKey"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/priority"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **MandateActionOutcome** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/mandates/notifications:
    post:
      tags:
      - Mandate
      summary: Mandate Notifications.
      description: |-
        The purpose of this operation is to provide a notification where the **Payer** has taken an action on a Mandate. The following notifications are supported:
          - Bilateral Create Mandate Resolution
          - Bilateral Create Mandate Timeout
          - Bilateral Amend Mandate Resolution (coming soon)
          - Bilateral Amend Mandate Timeout (coming soon)          
          - Unilateral Amend Mandate 
          - Unilateral Change Mandate Status<br>

        Duplicate checking should be based on **MMS** assigined identfier `action_identification`

      operationId: mandateNotifications
      parameters:
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **MandateNotification** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/mpirs/outcomes:
    post:
      tags:
      - MPIR
      summary: MPIR Processing Outcomes.
      description: |-
        The purpose of this operation is to provide the processing outcome of the following MPIR actions initiated by the **Payee**:<br>
        - Create MPIR
        - Retry MPIR (coming soon)

        If MPIR is processed same day and successfully settles then `transaction_status_reason_code` will be **ACSC** Settlement Completed.<br>

        If MPIR is future dated then `transaction_status_reason_code` will be **PDNG** Warehoused. This will be followed by the settlement processing outcome once `requested_execution_date` is reached.<br> 
        
        If MPIR settlement is delayed then `transaction_status_reason_code` will be **ACSP** Settlement Pending. This will be followed by the settlement processing outcome.<br> 

        If MPIR is invalid or fails settlement then `transaction_status_reason_code` will be **RJCT** Rejected. The `transaction_status_reason_code` will incidcate the reason for rejection.<br><br>

        Duplicate checking should be based on **Payee** assigined identfier `instruction_identification`/ `uetr` and `transaction_status_reason_code` <br><br>

        Payee should also consider Processing Outcomes for the same MPIR arrving out of sequence.
      operationId: mandateOutcomes
      parameters:
        - $ref: "#/components/parameters/requestKey"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/priority2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **MPIRActionOutcome** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/queries:
    post:
      tags:
      - Query
      summary: PayTo Queries.
      description: |-
        The purpose of this operation is to provide a notification where the **Payer** has raised a PayTo query via the **Payer's** Financial Institution. The following notifications are supported:
        - Mandate Query
        - Mandate Query Payment

        Duplicate checking should be based on **ANZ** assigined identfier `case_id` and `reminder_count` and `re_open_case_indication`
      operationId: mandateQueries
      parameters:
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority3"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **QueryNotification** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
components:
  securitySchemes:
    apiKeyAuth:        
      type: apiKey
      in: header
      name: apikey
      description: >-
        API key to authorise requests. The webhook includes a `apikey` header, the header name and value can be customised based on the customer requirements.  The purpose of this header is for the consumer to validate the request is sent with an exampled `apikey` in order to authenticate ANZ as the sending party.  If the `apikey` is not valid, the consumer should return a HTTP `401 Unauthorised` response.
  parameters:
    messageID:
      name: X-Message-Id
      in: header
      description: Duplicate check using point to point reference, as assigned by
        the instructing party, and sent to the next party in the chain to unambiguously
        identify the message
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    priority:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. This value does not affect the priority for processing within the MMS. It may, depending on topic configuration, influence which topic any generated notification is sent to.
      required: false
      schema:
        $ref: '#/components/schemas/NotificationPriority1Code'
    priority2:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. Urgency or order of importance that the originator would like the recipient of the payment instruction to apply to the processing of the payment instruction.
      required: false
      schema:
        $ref: '#/components/schemas/NotificationPriority1Code'
    priority3:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. Urgency or order of importance that the originator would like the recipient of the PayTo query to apply to the processing of the query.<br><br> Only **UNATTENDED** is supported for this notification type.
      required: false
      schema:
        $ref: '#/components/schemas/NotificationPriority2Code'
    requestKey:
      name: X-RequestKey
      in: header
      description: |-
        Internal End to End key used for support and reporting purposes.             
        
        Echoed from the Mandate Request acknowledgement or MPIR acknowledgement
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      example: 325ea624-ac19-47e2-94ef-a1ab4e487275
    correlationID:  
      name: X-Correlation-Id
      in: header
      description: |-
        Optional correlation ID provided by the data consumer that should
        be reflected back in the response headers. Can be used for reporting and
        logging.

        Echoed from the Mandate Request or MPIR
      schema:
        $ref: '#/components/schemas/UUID'
      example: '71d6fb19-7515-40dc-b045-e17550b67600'
  responses:
    200:
      description: OK - Processing Outcome Received
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
    400:
      description: Bad Request
      content: 
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/ErrorResponse'
            example:
                  status: "400"
                  title: Bad Request
                  detail: Missing mandate identification
    401:
      description: Unauthorised
      content: {}
    403:
      description: Forbidden
      content: {}
    408:
      description: Request Timeout      
      content: {}
    429:
      description: Too Many Requests
      content: {}
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf: 
              -  $ref: '#/components/schemas/ErrorResponse'
            example: 
                status: "500"
                title: Internal Server Error
                detail: Server failure  
    502:
      description: Bad Gateway
      content: {}
    503:
      description: Service Unavailable
      content: {}
    504:
      description: Bad Gateway 
      content: {}
    default:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ActiveCurrencyAndAmount:
      type: object
      description: A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
      additionalProperties: false
      properties:
        currency:
          type: string
          description: A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".
          pattern: ^[A-Z]{3,3}$
          enum:
            - AUD
        amount:
          type: string
          maxLength: 19
          pattern: ^(0|[1-9][0-9]{0,15})\.\d{2}$
          example: "100.00"
      required: 
        - currency
        - amount    
    ErrorResponse:
      type: object
      description: Generic error response.
      properties:
        status:
          type: string
          description: HTTP status code associated with this error
        title:
          type: string
          description: Short description associated with this error
        detail:
          type: string
          description: A detailed description associated with this error 
      required: 
        - status
        - title
        - detail    
    ErrorSeverity2Code:
      type: string
      enum:
      - FATL
      - LOGI
      - TRAN
      description: <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>FATL</td><td>Fatal</td><td>The error is considered fatal.</td></tr><tr><td>LOGI</td><td>Logical</td><td>The error is considered logical.</td></tr><tr><td>TRAN</td><td>Transient</td><td>The error is considered transient.</td></tr></table>
    Frequency6Code:
      type: string
      description: |-
        Specifies the regularity of an event.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ADHO</td><td>Adhoc</td><td>Event takes place on request or as necessary.</td></tr><tr><td>DAIL</td><td>Daily</td><td>Event takes place every day.</td></tr><tr><td>FRTN</td><td>Fortnightly</td><td>Event takes place every two weeks.</td></tr><tr><td>INDA</td><td>IntraDay</td><td>Event takes place several times a day.</td></tr><tr><td>MIAN</td><td>SemiAnnual</td><td>Event takes place every six months or two times a year.</td></tr><tr><td>MNTH</td><td>Monthly</td><td>Event takes place every month or once a month.</td></tr><tr><td>QURT</td><td>Quarterly</td><td>Event takes place every three months or four times a year.</td></tr><tr><td>WEEK</td><td>Weekly</td><td>Event takes place once a week.</td></tr><tr><td>YEAR</td><td>Annual</td><td>Event takes place every year or once a year.</td></tr></table>
      enum:
      - YEAR
      - MNTH
      - QURT
      - MIAN
      - WEEK
      - DAIL
      - ADHO
      - INDA
      - FRTN
    GenericStatus1:
      type: object
      description: "Specifies the generic status as a result of a method applied to a Resource.\n  \n**Property descriptions**:\n - **severity** - Indicates the severity of the related error."
      additionalProperties: false
      properties:
        code:
          type: string
          description: |-
            Code specifying the status on the request.
            Specifies a character string with a maximum length of 35 characters.
          minLength: 1
          maxLength: 35
        severity:
          $ref: '#/components/schemas/ErrorSeverity2Code'
        text:
          type: string
          description: |-
            Contains additional information on the status useful for the developer of the client application.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
        user_message:
          type: string
          description: |-
            User-friendly textual description of the code.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
        more_info:
          type: string
          description: |-
            Reference or external link to additional information that can be useful or relevant to the developer of the client application. This can be complemented by additional pointers to community input.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
      required:
      - code
      - severity
    MandateActionOutcome:
      type: object
      description: |-
        Processing outcome of a mandate request
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when Processing outcome notification was processed by ANZ, not the MMS processing time. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        status:
          type: string
          description: |-
            Status of the mandate request action.
            <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>SUCC</td><td>Successful</td><td>Mandate action successful.</td></tr><tr><td>RJCT</td><td>Rejected</td><td>Mandate action failed.</td></tr></table>
          enum:
            - RJCT
            - SUCC
          example: SUCC
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the mandate request
          minLength: 1
          maxLength: 10
          example: 10002005    
        request_id:
          allOf: 
            - $ref: '#/components/schemas/UUID'              
          description: |-
            Request UUID that identifies the mandate operation to be performed. This must be a Universally Unique IDentifier (UUID).
            
            Echoed from the mandate request 
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 2da9e0aa-5691-49bd-a772-af734c5c2340    
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        mandate_registration_date_time:
          type: string
          description: |-
            Date and time when the Mandate was originally registered in the MMS for a given Account Servicer, UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        mandate_status:
          $ref: '#/components/schemas/MandateStatus1Code'
        action_identification:
          type: string
          description: "Unique ID assigned to the mandate request action. This ID is used to uniquely identify the action for all further operations on a mandate action.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 85f28334c3a911edafa10242ac120002
        action_type:
          $ref: '#/components/schemas/MandateActionType1Code'
        action_status:
          $ref: '#/components/schemas/MandateActionStatus1Code'
        bilateral:
          type: boolean
          description: Boolean flag indicating if the action was created as bilateral or unilateral. This will only be present for mandate creation and amendment actions. 
          example: true
        debtor_alias_name:
          type: string
          description: Debtor Alias Name. Only provided where a debtor alias was provided in the Mandate Creation request or Mandate Amendment request.
        resolution_requested_by:
          type: string
          description: |-
            Optional time used to indicate by when resolution of a bilateral action is requested from the other party to the mandate. It will be provided in any notification sent to the counterparty. This time is for informational purposes only and does not affect the expiry time imposed by the MMS. <br><br>An ISODateTime whereby all timezoned dateTime values are UTC.<br><br> For an ATTENDED request **resolution_requested_by** should be within 5 minutes, ANZ will default to 5 minutes where not provided or override to 5 minutes where exceeds 5 minutes.<br><br> For an UNATTENDED request **resolution_requested_by** should be within 5 calendar days, ANZ will default to 5 calendar days where not provided or override to 5 calendar days where exceeds 5 calendar days.<br><br> Specificed here so **Payee** is informed where ANZ has defaulted or overridden the original value, otherwise will reflect the original value
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$  
        error:
          $ref: '#/components/schemas/GenericStatus1'
      required:
      - creation_date_time
      - status
    MandateActionStatus1Code:
      type: string
      description: |-
        Enumeration of the states that a mandate action can have.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>CMPL</td><td>Completed</td><td><p>This status represents the following situations:</p>
        <ul>
        <li>A bilateral action that has been confirmed.</li>
        <li>A unilateral action has been performed.</li>
        <li>A port that has been finalised.</li>
        </ul>
        </td></tr><tr><td>DECL</td><td>Declined</td><td>Action has been declined.</td></tr><tr><td>PEND</td><td>Pending</td><td><p>This status represents the following situations:</p>
        <ul>
        <li>A bilateral action that is waiting to be confirmed.</li>
        <li>A porting action that has been initiated and is waiting to be finalised.</li>
        </ul>
        </td></tr><tr><td>RECL</td><td>Recalled</td><td>Action has been recalled.</td></tr><tr><td>TIMO</td><td>TimedOut</td><td>Action was created bilaterally and has now timed out.</td></tr></table>
      enum:
      - CMPL
      - DECL
      - PEND
      - RECL
      - TIMO 
    MandateActionType1Code:
      type: string
      description: |-
        Enumeration of all mandate action types.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>AMND</td><td>Amend</td><td>Mandate amendment.</td></tr><tr><td>CREA</td><td>Create</td><td>Mandate creation.</td></tr><tr><td>PORT</td><td>Port</td><td>Mandate porting.</td></tr><tr><td>STCH</td><td>StatusChange</td><td>Mandate status change.</td></tr></table>
      enum:
      - AMND
      - CREA
      - PORT
      - STCH
    MandatePartyInformation1Creditor:
      type: object
      description: "Information concerning the creditor party identified in the mandate."
      additionalProperties: false
      properties:
        party_reference:
          type: string
          description: |-
            Specifies underlying party reference associated with the mandate, for example Customer Reference, Customer Number, Membership Number, Subscription Number, or Name.
            Specifies a character string with a maximum length of 35 ASCII printable characters.
          pattern: ^[ -~]{1,35}$
    MandatePartyInformation1Debtor:
      type: object
      description: "Information concerning the debtor party identified in the mandate."
      additionalProperties: false
      properties:
        party_name:
          type: string
          description: |-
            Name by which the party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        account_identification_type_code:
          type: string
          description: "Type of account identification, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>ALIA</td><td>Alias (PayID)</td></tr><tr><td>BBAN</td><td>Australian Bank-State-Branch Code (BSB)</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum:
          - ALIA
          - BBAN
        account_identification:
          type: string
          description: "Unique and unambiguous identification of the account between the account owner and the account servicer. For example:\r\n   - Basic Bank Account Number - account number with BSB (Bank-State-Branch) prefix. \n\nSpecifies a character string with a maximum length of 34 ASCII printable characters. \n\nThe account number will be masked."
          pattern: ^[ -~]{1,34}$
          example: '013010XXXXX8937'
        account_alias_type_code:
          type: string
          description: "Name of the Alias Type, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>AUBN</td><td>Australian Business Number</td></tr><tr><td>EMAL</td><td>Email address</td></tr><tr><td>ORGN</td><td>Organisation Identifier</td></tr><tr><td>TELI</td><td>Telephone Number</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum: 
          - AUBN
          - EMAL
          - ORGN
          - TELI
        account_alias_identification:
          type: string
          description: |-
            Identification used to indicate the account identification under another specified name.
            Specifies a character string with a maximum length of 2048 characters.
          minLength: 1
          maxLength: 2048
      required:
      - party_name
      - account_identification_type_code
    MandatePaymentInformation1:
      type: object
      description: "Set of characteristics detailing mandate payment information.\n  \n**Property descriptions**:\n - **payment_frequency** - Regularity with which instructions are to be created and processed.\n - **payment_amount_type** - Identifies the mandate payment arrangement.\n - **first_payment_amount** - Amount different from the payment amount, as it includes the costs associated with the first debited amount.\n - **last_payment_amount** - Last payment amount different  to the payment amount.\n - **amount** - Fixed amount to be debited from the debtor's account.\n - **maximum_amount** - Maximum amount that may be paid from the debtor's account, per instruction."
      additionalProperties: false
      properties:
        payment_frequency:
          $ref: '#/components/schemas/Frequency6Code'
        payment_execute_not_before_time:
          type: string
          description: |-
            Indicates that each execution of the mandate payment should not occur before a given time of that execution day.
            An ISO time whereby all timezoned time values are UTC.
          pattern: ^(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)|(-)$
        count_per_period:
          type: string
          pattern: ^(?=.{1,19}$)[0-9]{0,19}(?:\.[0-9]{0,18})?$
          description: Qualifies the frequency in terms of the number of instructions to be created and processed during the specified period.
        point_in_time:
          type: string
          description: |-
            Qualifies the frequency in terms of an exact point in time or moment within the specified period.
            Specifies a numeric string with an exact length of 2 digits.
          pattern: ^[0-9]{2}$
        payment_amount_type:
          $ref: '#/components/schemas/MandatePaymentType1Code'
        first_payment_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        last_payment_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        maximum_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
      required:
      - payment_frequency
      - payment_amount_type
    MandatePaymentType1Code:
      type: string
      description: |-
        Identifies the mandate payment arrangement.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>BALN</td><td>Balloon</td><td>Payment amount is fixed with large final payment amount.</td></tr><tr><td>FIXE</td><td>Fixed</td><td>Payment amount is fixed.</td></tr><tr><td>USGB</td><td>UsageBased</td><td>Payment amount is based on usage.</td></tr><tr><td>VARI</td><td>Variable</td><td>Payment amount is variable.</td></tr></table>
      enum:
      - BALN
      - FIXE
      - USGB
      - VARI    
    MandateNotification:
      type: object
      description: |-
        Mandate Notification as a result of a Payer action on a mandate      
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when mandate notification was processed by ANZ, not the MMS processing time. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        trigger:
          $ref: '#/components/schemas/NotificationTrigger1Code'
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the mandate request
          minLength: 1
          maxLength: 10   
          example: 10002005 
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        mandate_status:
          $ref: '#/components/schemas/MandateStatus1Code'
        action_identification:
          type: string
          description: "Unique ID assigned to the mandate request action. This ID is used to uniquely identify the action for all further operations on a mandate action.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 85f28334c3a911edafa10242ac120002
        action_type:
          $ref: '#/components/schemas/MandateActionType1Code'
        action_status:
          $ref: '#/components/schemas/MandateActionStatus1Code'
        details:
          type: object
          description: "Details of an action performed on a mandate by the **Payer** i.e. unilateral changes or MMS in case of mandate timeout. Depending on the type of action, only one of the following objects will be present: Amendment, Porting or StatusChange.\n  \n**Property descriptions**:\n - **amendment** - Mandate amendment details provided in the request.\n - **porting** - Mandate porting details. These details are only present when the port finalisation has been performed.\n - **status_change** - Mandate status change details provided in the request."
          additionalProperties: false
          properties:
 #           amendment:
 #             $ref: '#/components/schemas/MandateAmendmentRequest1'
 #           porting:
 #             $ref: '#/components/schemas/MandatePortFinalisationDetails1'
            status_change:
              $ref: '#/components/schemas/MandateStatusChangeDetails1'  
      required:
      - creation_date_time
      - trigger
      - mandate_status
      - mps_user_id
      - mandate_identification
      - action_identification
      - action_type
      - action_status
    MandateStatus1Code:
      type: string
      description: |-
        Enumeration of the states that a mandate can have.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ACTV</td><td>Active</td><td>The mandate has a status of active.</td></tr><tr><td>CNCD</td><td>Cancelled</td><td>The mandate has a status of cancelled.</td></tr><tr><td>CRTD</td><td>Created</td><td>The mandate has a status of created.</td></tr><tr><td>SUSD</td><td>Suspended</td><td>The mandate has a status of suspended.</td></tr></table>
      enum:
      - ACTV
      - CNCD
      - CRTD
      - SUSD
    MandateStatusChange1Code:
      type: string
      description: |-
        Enumeration of possible status changes.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>CNCL</td><td>Cancel</td><td>Cancel a mandate.</td></tr><tr><td>RELS</td><td>Release</td><td>Unsuspend a suspended mandate.</td></tr><tr><td>SUSP</td><td>Suspend</td><td>Suspend an active mandate.</td></tr></table>
      enum:
      - CNCL
      - RELS
      - SUSP  
    MandateStatusChangeDetails1:
      type: object
      description: "Request to change the status of a mandate."
      additionalProperties: false
      properties:
        change:
          $ref: '#/components/schemas/MandateStatusChange1Code'
        reason_code:
          type: string
          description: |-
            Code defining the reason for the status change to the mandate.
            Specifies an alphanumeric string with a length of 4 characters.
          pattern: ^[a-zA-Z0-9]{4}$
        reason_description:
          type: string
          description: |-
            Description of the change reason.
            Specifies a character string with a maximum length of 256 characters.
          minLength: 1
          maxLength: 256
      required:
      - change
    MPIRActionOutcome:
      type: object
      description: |-
        Processing outcome of a MPIR
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when Processing outcome notification was processed by ANZ, not the MPIR processing time. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        transaction_status:
          type: string
          description: |-
            Specifies the status of the MPIR.
            <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ACSC</td><td>AcceptedSettlementCompletedDebitorAccount</td><td>Settlement on the debtor's account has been completed.</td></tr><tr><td>ACSP</td><td>AcceptedSettlementInProcess</td><td>All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.</td></tr><tr><td>PDNG</td><td>Pending</td><td>MPIR is pending i.e. warehoused. Further checks and status update will be performed.
            </td></tr><tr><td>RJCT</td><td>Rejected</td><td>MPIR has been rejected.
            </td></tr></table>
          enum:
            - ACSC
            - ACSP
            - PDNG
            - RJCT
          example: ACSC
        transaction_status_reason_code:
          type: string
          description: |-
            Reason for the status, as published in an external reason code list. 
          minLength: 1
          maxLength: 4  
        transaction_status_additional_information:
          type: array
          description: |-
            Additional information relating to the status code and reason. 
          items:
            type: string
            minLength: 1
            maxLength: 105  
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the MPIR
          minLength: 1
          maxLength: 10  
          example: '10002005'
        instruction_identification:
          type: string
          description: |- 
            Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. 

            Echoed from MPIR
          minLength: 1
          maxLength: 35              
          example: TC121/1471873823
        uetr:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: |- 
            Universally unique identifier to provide an end-to-end reference of a payment transaction.

            Echoed from MPIR
          example: a690be37-9caf-44e4-bae1-475b50a8cb18  
        account_servicer_reference:
          type: string
          description: >-
            Unique reference, as assigned by the account servicing institution, to unambiguously identify the instruction.
          minLength: 1
          maxLength: 35
          example: MPS123456789
        clearing_system_reference:
          type: string
          description: >-
            Unique reference, as assigned by a clearing system, to unambiguously identify the instruction.
          minLength: 1
          maxLength: 35
          example: CUSCAU2SXXXN20230403000139150001900
        acceptance_date_time:
          type: string
          description: >-
            Point in time when the payment order from the initiating party meets
            the processing conditions of the account servicing agent. This means
            that the account servicing agent has received the payment order and
            has applied checks such as authorisation, availability of funds. <br><br> UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ <br><br>
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-06-13T15:01:20.246Z
        original_transaction_reference:
          type: object
          description: >-
            Key elements used to identify the original transaction that is being referred to.
          properties: 
            instructed_amount:
              $ref: '#/components/schemas/ActiveCurrencyAndAmount'
            mandate_identification:
              type: string
              description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
              pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
              example: 247de1c0c3a911edafa10242ac120002
            creditor_name:
              type: string
              description: |-
                Name by which the party is known and which is usually used to identify that party.
                Specifies a character string with a maximum length of 140 ASCII printable characters.
              pattern: ^[ -~]{1,140}$
            creditor_ultimate_name:
              type: string
              description: |-
                Name by which the ultimate party is known and which is usually used to identify that party.
                Specifies a character string with a maximum length of 140 ASCII printable characters.
              pattern: ^[ -~]{1,140}$
            creditor_account_identification:
              type: string
              description: "Unique and unambiguous identification of the account between the account owner and the account servicer. For example:\r\n   - Basic Bank Account Number - account number with BSB (Bank-State-Branch) prefix. \n\nSpecifies a character string with a maximum length of 34 ASCII printable characters."
              pattern: ^[ -~]{1,34}$
              example: '013010230008937'
      required:
        - creation_date_time
        - transaction_status
    NotificationPriority1Code:
      type: string
      description: |-
        Defines the notification priority.
        <table><tr><th>Code</th><th>Description</th></tr><tr><td>ATTENDED</td><td> Attended mode of operation.</td></tr><tr><td>UNATTENDED</td><td>Unattended mode of operation.</td></tr></table>
      enum:
      - ATTENDED
      - UNATTENDED
    NotificationPriority2Code:
      type: string
      description: |-
        Defines the notification priority.
        <table><tr><th>Code</th><th>Description</th></tr><tr><td>UNATTENDED</td><td>Unattended mode of operation.</td></tr></table>
      enum:
      - UNATTENDED  
    NotificationTrigger1Code:
      type: string
      description: |-
        Defines events that trigger a notification.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>MAMN</td><td>MandateAmended</td><td>Sent to the counterparty of a unilateral mandate amendment to indicate that action has occurred.</td></tr><tr><td>MCRC</td><td>MandateCreateConfirmed</td><td>Sent to the initiator of a bilateral mandate creation to indicate that the counterparty has confirmed the action.</td></tr><tr><td>MCRD</td><td>MandateCreateDeclined</td><td>Sent to the initiator of a bilateral mandate creation to indicate that the counterparty has declined the action.</td></tr><tr><td>MCRX</td><td>MandateCreateExpired</td><td>Sent to the initiator of a mandate creation action once its expiry time has been reached and the status of the action is set to Timed Out (TIMO). For a bilateral creation action, this notification is also sent to the servicer of the Debtor Account.</td></tr><tr><td>MSCH</td><td>MandateStatusChanged</td><td>Sent to the counterparty of a unilateral mandate status change to indicate that action has occurred.</td></tr></table>
      enum:
      - MAMN
      - MCRC
      - MCRD
      - MCRX
      - MSCH
    QueryMandateDetails:
      type: object
      description: |-
        Key Mandate details for the referenced Mandate Id in the PayTo Query.
      additionalProperties: false
      properties:
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the Mandate
          minLength: 1
          maxLength: 10  
          example: '10002005'
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        establishment_scheme:
          type: string
          description: |-
            Identifies the arrangement (unilateral or bilateral) and party that established the mandate.
            <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>AUPM</td><td>AuthorisedPaymentMandate</td><td>Established bilaterally as Authorised Payment Mandate.</td></tr><tr><td>MGCR</td><td>MigratedByCreditor</td><td>Established by migration from legacy service by Creditor.</td></tr></table>
          enum:
          - AUPM
          - MGCR
        mandate_purpose_code:
          type: string
          description: |-
            Specifies the high level purpose of the mandate based on a set of pre-defined categories.
            Specifies an alphanumeric string with a length of 4 characters.
            <table><tr><th>Code</th><th>Description</th></tr><tr><td>DEPD</td><td>Dependant Support Payments</td></tr><tr><td>GAMP</td><td>Gambling Payments</td></tr><tr><td>GOVT</td><td>Government Payments</td></tr><tr><td>LOAN</td><td>Loan Payments</td></tr><tr><td>MORT</td><td>Mortgage Payments</td></tr><tr><td>OTHR</td><td>Other Service Payments</td></tr><tr><td>PENS</td><td>Pension Payments</td></tr><tr><td>PERS</td><td>Personal Payment</td></tr><tr><td>RETL</td><td>Retail Payments</td></tr><tr><td>SALA</td><td>Salary Payments</td></tr><tr><td>TAXS</td><td>Tax Payments</td></tr><tr><td>UTIL</td><td>Utility Payments</td></tr></table>   
          pattern: ^[a-zA-Z0-9]{4}$
          enum: 
          - DEPD
          - GAMP
          - GOVT
          - LOAN
          - MORT
          - OTHR
          - PENS
          - PERS
          - RETL
          - SALA
          - TAXS
          - UTIL
        description:
          type: string
          description: |-
            Reason for the mandate setup as narrative text.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        debtor_information:
          $ref: '#/components/schemas/MandatePartyInformation1Debtor'
        creditor_information:
          $ref: '#/components/schemas/MandatePartyInformation1Creditor'
        payment_information:
          $ref: '#/components/schemas/MandatePaymentInformation1'
        additional_information:
          type: string
          description: |-
            Additional information, in free text form, to complement the mandate information.
            Specifies a character string with a maximum length of 140 characters.
          minLength: 1
          maxLength: 140
      required:
      - mps_user_id
      - mandate_identification
      - establishment_scheme
      - mandate_purpose_code
      - description
      - debtor_information
      - payment_information
    QueryNotification:
      type: object
      description: |-
        PayTo Query
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when PayTo Query notification was processed by ANZ, not when the PayTo query was raised. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        case_id:
          type: string
          description: |-
            Case Identifier. A unique case reference as assigned by ANZ. To be referenced when providing a Query Resolution.   
          minLength: 1
          maxLength: 20  
          example: ANZAU230821-00002
        investigation_type_code:
          type: string
          description: |-
            Investigation Type Code.
            <table><tr><th>Code</th><th>Name</th></tr><tr><td>INV14</td><td>Mandate Query</td></tr></table>
          enum:
            - INV14
        case_type:
          type: string
          description: |-
            Case Type.
            <table><tr><th>Name</th><th>Description</th></tr><tr><td>Mandate Query Case</td><td>A query about a mandate.</td></tr><tr><td>Mandate Query Payments</td><td>A query about a mandated payment.</td></tr></table>
          enum:
            - Mandate Query Case
            - Mandate Query Payments
        reminder_count:
          type: string
          description: |-
            Reminder Count. Will be incremented by 1 each time ANZ generates the same PayTo query notiication where no Query Resolution has been received.   
          minLength: 1
          maxLength: 2  
          example: "1"
        re_open_case_indication:
          type: boolean
          description: |-
            Re-opened Case Indicator. Where ANZ re-opens a previously closed case this flag will be set to true.    
        narrative:
          type: string
          description: |-
            Narrative as sent by Payer's OFI.   
          minLength: 1
          maxLength: 2048  
          example: /MandateID/20a73840a79c11eda83b9b809f5abcbe//Reason/OAT 67/
        payment_details:
          type: object
          description: >-
            Key elements used to identify the original transaction that is being referred to.
          properties: 
            transaction_identification:
              type: string
              description: >-
                Unique reference, as assigned by the Payer's OFI, to unambiguously identify the transaction.
              minLength: 1
              maxLength: 35
              example: CUSCAU2SXXXN20230403000139150001900
            instruction_identification:
              type: string
              description: >-
                Unique reference, as assigned by ANZ, to unambiguously identify the instruction. Note this is not the Payee's Instruction Identification
              minLength: 1
              maxLength: 35
              example: ANZBAU3LXXXI20230621900000000011200
            transaction_date:
              type: string
              description: |-
                Transaction Date.
                A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
              pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
              example: "2023-03-01"
            original_transaction_amount:
              $ref: '#/components/schemas/ActiveCurrencyAndAmount'
          required:
            - transaction_identification
            - instruction_identification
            - transaction_date
            - original_transaction_amount        
        mandate_details:
          $ref: '#/components/schemas/QueryMandateDetails'
      required:
        - creation_date_time
        - case_id
        - investigation_type_code
        - case_type
        - narrative
        - mandate_details
    SecuredSubmissionResource:
      type: object
      properties:
        secured_payload:
          type: string
          description: Encrypted and secured payload
          x-jws-signature:
            algorithm: RS256
          x-jwe-encryption:
            algorithm: RSA-OAEP
            encryption: A256CBC-HS512
      required:
        - secured_payload
      example:
        secured_payload: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpbnN0cnVjdGlvbl9pZGVudGlmaWNhdGlvbiI6IlRDMTIxLzE0NzE4NzM4MjMiLCJlbmRfdG9fZW5kX2lkZW50aWZpY2F0aW9uIjoiTk9UUFJPVklERUQiLCJjcmVhdGlvbl9kYXRlX3RpbWUiOiIyMDE4LTA5LTE3VDA5OjQ1OjQ3WiIsImluaXRpYXRpbmdfcGFydHlfbmFtZSI6IkN1c3RvbWVyQSIsInJlcXVlc3RlZF9leGVjdXRpb25fZGF0ZSI6IjIwMTgtMDktMTciLCJkZWJ0b3JfbmFtZSI6IkJJTEJPIEJBR0dJTlMiLCJkZWJ0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMzQyMTIzNDU2NyIsImRlYnRvcl9hY2NvdW50X3R5cGUiOiJCQkFOIiwiaW5zdHJ1Y3RlZF9hbW91bnQiOnsiY3VycmVuY3kiOiJBVUQiLCJhbW91bnQiOiI1NjIuODkifSwiY3JlZGl0b3JfbmFtZSI6IlNBTVdJU0UgR0FNR0VFIiwiY3JlZGl0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMDE2OTg3NjU0MzIxIiwiY3JlZGl0b3JfYWNjb3VudF90eXBlIjoiQkJBTiIsImNyZWRpdG9yX2FnZW50X2JpYyI6Ik5PVFBST1ZJREVEIiwicmVtaXR0YW5jZV9pbmZvcm1hdGlvbl91bnN0cnVjdHVyZWQiOlsiRklSU1QgTElORSIsIlNFQ09ORCBMSU5FIl19.aR2RMEVTuOOI1YuUCf2Ppo3Bwtf2_91WMvLd3IIA0ToHBDn0II36FumIz2RrwiUNHBMZo41Qmjv_zt9TQbq61csx2lRZcQNNsstAXKZWI4oZjlBaenj3HvY2_ztxS2IPNZNlVUQrw8A51-1dm-EeVTsqwhxs-Ir6d1FCee5SaNBrhtfaDBGAwjtXolPJuyYve0J3F8X-JwKPLBUaQH5LgGlTOSasC0vsKqhfpZOc-3rS39UA7q0jHQyqcJKrhinEyWlTFU9PcOh2W4-0hXiPaLJ_PA-_EkY5kYBnBvUWofVy35ZnB_u0wv0gxvVVDYKLGUpOGblaWRUY09SHx52Njw'
    Success:
      type: object
      properties:
        id:
          type: string
          description: Customer defined message key for support purposes
          example: a27f873f-663e-49c2-a688-10fd1c5ffe11
        status:
          type: string
          description: Customer defined message status e.g. RCVD = Received
          example: RCVD    
    UUID:
      type: string
      example: '3d003c66-2d00-4092-8d8a-e55ba9bf8b2b'
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
tags:
  - name: Mandate
    description: Operations related to mandates.
  - name: MandateActionOutcome
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateActionOutcome" />
  - name: MandateNotification
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateNotification" />
  - name: MPIRActionOutcome
    description: <SchemaDefinition schemaRef="#/components/schemas/MPIRActionOutcome" />
  - name: QueryNotification
    description: <SchemaDefinition schemaRef="#/components/schemas/QueryNotification" />
  - name: SecuredSubmissionResource
    description: <SchemaDefinition schemaRef="#/components/schemas/SecuredSubmissionResource" />
x-tagGroups:
  - name: Paths
    tags: 
      - Mandate
      - MPIR
      - Query
  - name: Models
    tags: 
      - MandateActionOutcome
      - MandateNotification
      - MPIRActionOutcome
      - QueryNotification
      - SecuredSubmissionResource