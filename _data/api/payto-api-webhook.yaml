openapi: '3.0.1'
info:
  title: Fileactive PayTo API Webhook
  description: |-
    Fileactive PayTo API Webhook provides consumers the ability to receive:<br>
    - Mandate Processing Outcomes
    - Mandate Resolution Notifications
    - MPIR Processing Outcomes<br><br>

    Payloads will be encrypted prior to transmitting and customers will need to decrypt the payload and verify the signature prior to processing the Mandate Processing Outcome.<br>
    
    Processing outcomes may arrive out of sequence and may be delivered more than once. ANZ will attempt to deliver each Processing Outcome at least once.
    
  version: 1.0.0
servers:
  - url: 'https://api.uat.example.com/v1.0'
    description: UAT Environment
  - url: 'https://api.example.com.au/v1.0'
    description: Production Environment
security:
  - apiKeyAuth: []
paths:
  /payto/mandates/outcomes:
    post:
      tags:
      - Mandate
      summary: Mandate Processing Outcomes.
      description: |-
        The purpose of this operation is to provide the processing outcome of the following mandate actions initiated by the **Payee**:<br>
        - Create Mandate
        - Amend Mandate
        - Change Mandate Status
        - Mandate Creation/Amendment Recall<br>

        Duplicate checking should be based on the `request_id`, i.e. the **Payee** identifiyer provided in the original mandate request.
      operationId: mandateOutcomes
      parameters:
        - $ref: "#/components/parameters/requestKey"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **MandateActionOutcome** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/mandates/notifications:
    post:
      tags:
      - Mandate
      summary: Mandate Notifications.
      description: >-
        The purpose of this operation is to provide a notification where the **Payer** has taken an action on a Mandate. The following notifications are supported:
          - Bilateral Create Mandate Resolution
          - Bilateral Create Mandate Timeout
          - Bilateral Amend Mandate Resolution
          - Bilateral Amend Mandate Timeout          
          - Unilateral Amend Mandate
          - Change Mandate Status
      operationId: mandateNotifications
      parameters:
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource, refer to Model/Schema **MandateNotification** for unencrypted payload object
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        408:
          $ref: '#/components/responses/408'  
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
components:
  securitySchemes:
    apiKeyAuth:        
      type: apiKey
      in: header
      name: apikey
      description: >-
        API key to authorise requests. The webhook includes a `apikey` header, the header name and value can be customised based on the customer requirements.  The purpose of this header is for the consumer to validate the request is sent with an exampled `apikey` in order to authenticate ANZ as the sending party.  If the `apikey` is not valid, the consumer should return a HTTP `401 Unauthorised` response.
  parameters:
    messageID:
      name: X-Message-Id
      in: header
      description: Duplicate check using point to point reference, as assigned by
        the instructing party, and sent to the next party in the chain to unambiguously
        identify the message
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    priority:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. This value does not affect the priority for processing within the MMS. It may, depending on topic configuration, influence which topic any generated notification is sent to.
      required: false
      schema:
        $ref: '#/components/schemas/NotificationPriority1Code'
    requestKey:
      name: X-RequestKey
      in: header
      description: |-
        Internal End to End key used for support and reporting purposes.             
        
        Echoed from the mandate request acknowledgement
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      example: 325ea624-ac19-47e2-94ef-a1ab4e487275
  responses:
    200:
      description: OK - Processing Outcome Received
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
    400:
      description: Bad Request
      content: 
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/ErrorResponse'
            example:
                  status: "400"
                  title: Bad Request
                  detail: Missing mandate identification
    401:
      description: Unauthorised
      content: {}
    403:
      description: Forbidden
      content: {}
    408:
      description: Request Timeout      
      content: {}
    429:
      description: Too Many Requests
      content: {}
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf: 
              -  $ref: '#/components/schemas/ErrorResponse'
            example: 
                status: "500"
                title: Internal Server Error
                detail: Server failure  
    502:
      description: Bad Gateway
      content: {}
    503:
      description: Service Unavailable
      content: {}
    504:
      description: Bad Gateway 
      content: {}
    default:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      description: Generic error response.
      properties:
        status:
          type: string
          description: HTTP status code associated with this error
        title:
          type: string
          description: Short description associated with this error
        detail:
          type: string
          description: A detailed description associated with this error 
      required: 
        - status
        - title
        - detail    
    ErrorSeverity2Code:
      type: string
      enum:
      - FATL
      - LOGI
      - TRAN
      description: <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>FATL</td><td>Fatal</td><td>The error is considered fatal.</td></tr><tr><td>LOGI</td><td>Logical</td><td>The error is considered logical.</td></tr><tr><td>TRAN</td><td>Transient</td><td>The error is considered transient.</td></tr></table>
    GenericStatus1:
      type: object
      description: "Specifies the generic status as a result of a method applied to a Resource.\n  \n**Property descriptions**:\n - **severity** - Indicates the severity of the related error."
      additionalProperties: false
      properties:
        code:
          type: string
          description: |-
            Code specifying the status on the request.
            Specifies a character string with a maximum length of 35 characters.
          minLength: 1
          maxLength: 35
        severity:
          $ref: '#/components/schemas/ErrorSeverity2Code'
        text:
          type: string
          description: |-
            Contains additional information on the status useful for the developer of the client application.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
        user_message:
          type: string
          description: |-
            User-friendly textual description of the code.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
        more_info:
          type: string
          description: |-
            Reference or external link to additional information that can be useful or relevant to the developer of the client application. This can be complemented by additional pointers to community input.
            Specifies a character string with a maximum length of 1000 characters.
          minLength: 1
          maxLength: 1000
      required:
      - code
      - severity
    MandateActionOutcome:
      type: object
      description: |-
        Processing outcome of a mandate request
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when Processing outcome notification was processed by ANZ, not the MMS processing time. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        status:
          type: string
          description: |-
            Status of the mandate request action.
            <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>SUCC</td><td>Successful</td><td>Mandate action successful.</td></tr><tr><td>RJCT</td><td>Rejected</td><td>Mandate action failed.</td></tr></table>
          enum:
            - RJCT
            - SUCC
          example: SUCC
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the mandate request
        request_id:
          type: string
          description: |-
            Request UUID that identifies the mandate operation to be performed. This must be a Universally Unique IDentifier (UUID) version 1.
            
            Echoed from the mandate request 
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$   
          example: c8f59c8ac3a811edafa10242ac120002     
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        mandate_registration_date_time:
          type: string
          description: |-
            Date and time when the Mandate was originally registered in the MMS for a given Account Servicer, UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        mandate_status:
          $ref: '#/components/schemas/MandateStatus1Code'
        action_identification:
          type: string
          description: "Unique ID assigned to the mandate request action. This ID is used to uniquely identify the action for all further operations on a mandate action.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 85f28334c3a911edafa10242ac120002
        action_type:
          $ref: '#/components/schemas/MandateActionType1Code'
        action_status:
          $ref: '#/components/schemas/MandateActionStatus1Code'
        bilateral:
          type: boolean
          description: Boolean flag indicating if the action was created as bilateral or unilateral. This will only be present for mandate creation and amendment actions. 
          example: true
        error:
          $ref: '#/components/schemas/GenericStatus1'
      required:
      - creation_date_time
      - status
    MandateActionStatus1Code:
      type: string
      description: |-
        Enumeration of the states that a mandate action can have.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>CMPL</td><td>Completed</td><td><p>This status represents the following situations:</p>
        <ul>
        <li>A bilateral action that has been confirmed.</li>
        <li>A unilateral action has been performed.</li>
        <li>A port that has been finalised.</li>
        </ul>
        </td></tr><tr><td>DECL</td><td>Declined</td><td>Action has been declined.</td></tr><tr><td>PEND</td><td>Pending</td><td><p>This status represents the following situations:</p>
        <ul>
        <li>A bilateral action that is waiting to be confirmed.</li>
        <li>A porting action that has been initiated and is waiting to be finalised.</li>
        </ul>
        </td></tr><tr><td>RECL</td><td>Recalled</td><td>Action has been recalled.</td></tr><tr><td>TIMO</td><td>TimedOut</td><td>Action was created bilaterally and has now timed out.</td></tr></table>
      enum:
      - CMPL
      - DECL
      - RECL
      - PEND
      - TIMO 
    MandateActionType1Code:
      type: string
      description: |-
        Enumeration of all mandate action types.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>AMND</td><td>Amend</td><td>Mandate amendment.</td></tr><tr><td>CREA</td><td>Create</td><td>Mandate creation.</td></tr><tr><td>PORT</td><td>Port</td><td>Mandate porting.</td></tr><tr><td>STCH</td><td>StatusChange</td><td>Mandate status change.</td></tr></table>
      enum:
      - AMND
      - CREA
      - PORT
      - STCH
    MandateNotification:
      type: object
      description: |-
        Mandate Notification as a result of a Payer action on a mandate      
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when mandate notification was processed by ANZ, not the MMS processing time. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-03-16T15:01:20.246Z
        trigger:
          $ref: '#/components/schemas/NotificationTrigger1Code'
        mps_user_id:
          type: string
          description: |-
            MPS User Id which is associated with the mandate request
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        mandate_status:
          $ref: '#/components/schemas/MandateStatus1Code'
        action_identification:
          type: string
          description: "Unique ID assigned to the mandate request action. This ID is used to uniquely identify the action for all further operations on a mandate action.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 85f28334c3a911edafa10242ac120002
        action_type:
          $ref: '#/components/schemas/MandateActionType1Code'
        action_status:
          $ref: '#/components/schemas/MandateActionStatus1Code'
      required:
      - creation_date_time
      - trigger
      - status
      - mps_user_id
      - mandate_identification
      - action_identification
      - action_type
      - action_status
    MandateStatus1Code:
      type: string
      description: |-
        Enumeration of the states that a mandate can have.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ACTV</td><td>Active</td><td>The mandate has a status of active.</td></tr><tr><td>CNCD</td><td>Cancelled</td><td>The mandate has a status of cancelled.</td></tr><tr><td>CRTD</td><td>Created</td><td>The mandate has a status of created.</td></tr><tr><td>SUSD</td><td>Suspended</td><td>The mandate has a status of suspended.</td></tr></table>
      enum:
      - ACTV
      - CNCD
      - CRTD
      - SUSD  
    NotificationPriority1Code:
      type: string
      description: |-
        Defines the notification priority.
        <table><tr><th>Code</th><th>Description</th></tr><tr><td>ATTENDED</td><td> Attended mode of operation.</td></tr><tr><td>UNATTENDED</td><td>Unattended mode of operation.</td></tr></table>
      enum:
      - ATTENDED
      - UNATTENDED
    NotificationTrigger1Code:
      type: string
      description: |-
        Defines events that trigger a notification.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>MAMC</td><td>MandateAmendConfirmed</td><td>Sent to the initiator of a bilateral mandate amendment to indicate that the counterparty has confirmed the action.</td></tr><tr><td>MAMD</td><td>MandateAmendDeclined</td><td>Sent to the initiator of a bilateral mandate amendment to indicate that the counterparty has declined the action.</td></tr><tr><td>MAMN</td><td>MandateAmended</td><td>Sent to the counterparty of a unilateral mandate amendment to indicate that action has occurred.</td></tr><tr><td>MAMR</td><td>MandateAmendRecalled</td><td>Sent to the counterparty of a bilateral mandate amendment to indicate that the action has been recalled by the initiator.</td></tr><tr><td>MAMX</td><td>MandateAmendExpired</td><td>Sent to the initiator of an amend action once its expiry time has been reached and the status of the action is set to Timed Out (TIMO). For a bilateral amend action, this notification is also sent to the servicer of the Debtor Account.</td></tr><tr><td>MCRC</td><td>MandateCreateConfirmed</td><td>Sent to the initiator of a bilateral mandate creation to indicate that the counterparty has confirmed the action.</td></tr><tr><td>MCRD</td><td>MandateCreateDeclined</td><td>Sent to the initiator of a bilateral mandate creation to indicate that the counterparty has declined the action.</td></tr><tr><td>MCRX</td><td>MandateCreateExpired</td><td>Sent to the initiator of a mandate creation action once its expiry time has been reached and the status of the action is set to Timed Out (TIMO). For a bilateral creation action, this notification is also sent to the servicer of the Debtor Account.</td></tr><tr><td>MPOF</td><td>MandatePortFinalised</td><td>Sent to the old bank to indicate that the porting of a mandate has been finalised.</td></tr><tr><td>MPOT</td><td>MandatePorted</td><td>Sent to the counterparty of a mandate when the port is finalised.</td></tr><tr><td>MPOX</td><td>MandatePortExpired</td><td>Sent to the initiator of a mandate port action once its expiry time has been reached and the status of the action is set to Timed Out (TIMO).</td></tr><tr><td>MSCH</td><td>MandateStatusChanged</td><td>Sent to the counterparty of a unilateral mandate status change to indicate that action has occurred.</td></tr></table>
      enum:
      - MAMC
      - MAMD
      - MAMN
      - MAMR
      - MAMX
      - MCRC
      - MCRD
      - MCRR
      - MCRX
      - MPOF
      - MPOT
      - MPOX
      - MSCH
    SecuredSubmissionResource:
      type: object
      properties:
        secured_payload:
          type: string
          description: Encrypted and secured payload
          x-jws-signature:
            algorithm: RS256
          x-jwe-encryption:
            algorithm: RSA-OAEP
            encryption: A256CBC-HS512
      required:
        - secured_payload
      example:
        secured_payload: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpbnN0cnVjdGlvbl9pZGVudGlmaWNhdGlvbiI6IlRDMTIxLzE0NzE4NzM4MjMiLCJlbmRfdG9fZW5kX2lkZW50aWZpY2F0aW9uIjoiTk9UUFJPVklERUQiLCJjcmVhdGlvbl9kYXRlX3RpbWUiOiIyMDE4LTA5LTE3VDA5OjQ1OjQ3WiIsImluaXRpYXRpbmdfcGFydHlfbmFtZSI6IkN1c3RvbWVyQSIsInJlcXVlc3RlZF9leGVjdXRpb25fZGF0ZSI6IjIwMTgtMDktMTciLCJkZWJ0b3JfbmFtZSI6IkJJTEJPIEJBR0dJTlMiLCJkZWJ0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMzQyMTIzNDU2NyIsImRlYnRvcl9hY2NvdW50X3R5cGUiOiJCQkFOIiwiaW5zdHJ1Y3RlZF9hbW91bnQiOnsiY3VycmVuY3kiOiJBVUQiLCJhbW91bnQiOiI1NjIuODkifSwiY3JlZGl0b3JfbmFtZSI6IlNBTVdJU0UgR0FNR0VFIiwiY3JlZGl0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMDE2OTg3NjU0MzIxIiwiY3JlZGl0b3JfYWNjb3VudF90eXBlIjoiQkJBTiIsImNyZWRpdG9yX2FnZW50X2JpYyI6Ik5PVFBST1ZJREVEIiwicmVtaXR0YW5jZV9pbmZvcm1hdGlvbl91bnN0cnVjdHVyZWQiOlsiRklSU1QgTElORSIsIlNFQ09ORCBMSU5FIl19.aR2RMEVTuOOI1YuUCf2Ppo3Bwtf2_91WMvLd3IIA0ToHBDn0II36FumIz2RrwiUNHBMZo41Qmjv_zt9TQbq61csx2lRZcQNNsstAXKZWI4oZjlBaenj3HvY2_ztxS2IPNZNlVUQrw8A51-1dm-EeVTsqwhxs-Ir6d1FCee5SaNBrhtfaDBGAwjtXolPJuyYve0J3F8X-JwKPLBUaQH5LgGlTOSasC0vsKqhfpZOc-3rS39UA7q0jHQyqcJKrhinEyWlTFU9PcOh2W4-0hXiPaLJ_PA-_EkY5kYBnBvUWofVy35ZnB_u0wv0gxvVVDYKLGUpOGblaWRUY09SHx52Njw'
    Success:
      type: object
      properties:
        id:
          type: string
          description: Customer defined message key for support purposes
          example: a27f873f-663e-49c2-a688-10fd1c5ffe11
        status:
          type: string
          description: Customer defined message status e.g. RCVD = Received
          example: RCVD    
    UUID:
      type: string
      example: '71d6fb19-7515-40dc-b045-e17550b67600'
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
tags:
  - name: Mandate
    description: Operations related to mandates.
  - name: MandateActionOutcome
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateActionOutcome" />
  - name: MandateNotification
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateNotification" />
  - name: SecuredSubmissionResource
    description: <SchemaDefinition schemaRef="#/components/schemas/SecuredSubmissionResource" />
x-tagGroups:
  - name: Paths
    tags: 
      - Mandate
  - name: Models
    tags: 
      - MandateActionOutcome
      - MandateNotification
      - SecuredSubmissionResource