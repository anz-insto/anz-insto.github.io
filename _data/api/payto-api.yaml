openapi: '3.0.1'
info:
  title: Fileactive PayTo API
  description: |-
    Fileactive PayTo API provides consumers the ability to
    * Create a Mandate
    * Amend a Mandate (coming soon)
    * Change a Mandate Status
    * Mandate Creation/Amendment Recall (coming soon)
    * Retreive Mandate Details (coming soon)
    * Create a Mandated Payment Initiation Request (MPIR)
    * Retry a Mandated Payment Initiation Request (MPIR) (coming soon)
    * Create a PayTo Query Resolution
  version: 1.0.0
servers:
  - url: https://api.fileactive.uat.anzgcis.com
    description: 'UAT (non-production) environment'
  - url: https://api.fileactive.anzgcis.com
    description: 'Production Environment'
security:
  - bearerAuth: []
    apiKeyAuth: []
paths:
  /v1.0/auth:
    post:
      security:
          - apiKeyAuth: []
            OAuth2: []
      summary: Obtain authorisation token
      description: >
        ANZ use OAuth 2.0 to authenticate inbound token requests, a bearer token is returned as a response which is then used to authorise against ANZ resources
      tags: 
      - Authorisation
      operationId: auth
      requestBody:
        description: 'Information and examples of Auth request body'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      responses:
        200:
          $ref: '#/components/responses/200OKAuth'
        400:
          $ref: '#/components/responses/400Auth'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500Auth'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/v1.0/mandates:
    post:
      tags:
      - Mandate
      summary: Create a new mandate.
      description: "The purpose of this operation is to create a new mandate in the MMS. A mandate is always created by the Payment Initiator. If the Establishment Scheme for the mandate is 'AUPM' then the mandate will be created bilaterally, otherwise it will be created unilaterally. A unilaterally created mandate will have initial status 'Active' and version '1' whereas a bilaterally created mandate will have initial status 'Created' and version '0'. A bilaterally created mandate can only become 'Active' when the Debtor confirms the creation of the mandate, at which moment its' version will also increase to '1'. \n\nA bilateral mandate creation will automatically expire after a fixed time period if the creation action is not completed, declined or recalled. Expiry of a mandate creation will result in the mandate status being set to 'Cancelled'. \n\nThe initial API response indicates if ANZ has accepted or rejected the request, not the processing outcome of the request. The processing outcome of the request will be delivered via the **PayTo Webhook API**.\n\nThe following rules apply to this API:\n- EstablishmentSchemeRule1: If `establishment_scheme` is equal to 'MGCR' then `creditor_information` **must** be present.\n- EstablishmentSchemeRule2: If `establishment_scheme` is equal to 'MGCR' then `debtor_information.account_alias_identification` **must** be absent.\n- EstablishmentSchemeRule3: If `establishment_scheme` is equal to 'MGCR' then `additional_information` **must** be populated with the BECS User Id of the Initiating Party.\n-  EstablishmentSchemeRule4: If `establishment_scheme` is not equal to 'AUPM' then `resolution_requested_by` **must** be absent."
      operationId: createMandate
      parameters:
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource to create a mandate in the MMS. Refer to Model/Schema **MandateCreationRequest** for unencrypted payload object
        required: true
      responses:
        202:
          $ref: '#/components/responses/202'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/v1.0/mandates/{mandateId}/status:
    patch:
      tags:
      - Mandate
      summary: Change the status of a mandate.
      description: "The purpose of this operation is to change the status of a mandate. A status change is always performed as a unilateral operation. The status can only be changed when the mandate is currently active or suspended. Releasing a suspended mandate can only be performed by the party that suspended the mandate. A status change can be applied when there is a pending amendment and also when porting is in progress. \n\nUpon successful status change the mandate version number will be incremented. \n\nAny notification triggered by this operation will have priority UNATTENDED. \n\nThe initial API response indicates if ANZ has accepted or rejected the request, not the processing outcome of the request. The processing outcome of the request will be delivered via the **PayTo Webhook API**.\n\nThe following rules apply to this API:\n- ChangeAndReasonCodeRule1: When `change` is equal to value 'CNCL' or 'SUSP' then `reason_code` must be present."
      operationId: changeMandateStatus
      parameters:
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority2"
        - name: mandateId
          in: path
          description: ID of mandate whose status is to be updated.
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource to change the status of a mandate in the MMS. Refer to Model/Schema **MandateStatusChangeRequest** for unencrypted payload object. 
        required: true
      responses:
        202:
          $ref: '#/components/responses/202'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/v1.0/mpirs:
    post:
      tags:
      - MPIR
      summary: Create a new MPIR.
      description: "The purpose of this operation is to create a new mandated payment initiation request (MPIR). The underlying mandate **must** be in an 'Active' state. \n\nThe initial API response indicates if ANZ has accepted or rejected the request, not the MPIR processing outcome of the request. The MPIR processing outcome will be delivered via the **PayTo Webhook API**. \n\nThe following rules apply to this API:\n- MPSUserSchemeRule1: `mps_user_id` **must** be the owner of the provided `mandate_identification` \n- InstructedAmountSchemeRule1: `instructed_amount` **must** not exceed the maximum amount specified in the associated mandate `mandate_identification` \n- CreditorDetailsSchemeRule1: `creditor_information` **must** be present where not provided on the mandate.\n- CreditorDetailsSchemeRule2: `creditor_information` **should** not be present where provided on the mandate.\n- CreditorDetailsSchemeRule3: If `creditor_information` is provided and is also available on the mandate then details **must** be exactly the same."
      operationId: createMPIR
      parameters:
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority3"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource to create a mandate in the MMS. Refer to Model/Schema **MPIRCreationRequest** for unencrypted payload object
        required: true
      responses:
        202:
          $ref: '#/components/responses/202'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'
  /payto/v1.0/query-resolutions:
    post:
      tags:
      - Query
      summary: PayTo query resolution.
      description: "The purpose of this operation is to provide a resolution to a PayTo query raised by the **Payee's** Financial Institution. Queries are delivered via the **PayTo Query Webhook API**.  \n\nThe following rules apply to this API: \n- CaseDecisionSchemeRule1: `case_decision` = **ACPT** then `reject_reason_code`, `return_transaction_identification` and `narrative` **must not** be provided. \n- CaseDecisionSchemeRule2: `case_decision` = **FINO** then `reject_reason_code` and `return_transaction_identification` **must not** be provided. \n- CaseDecisionSchemeRule3: `case_decision` = **FINO** then `narrative` **must** be provided \n- CaseDecisionSchemeRule4: `case_decision` = **PEND** then `reject_reason_code`, `return_transaction_identification` and `narrative` **must not** be provided. \n- CaseDecisionSchemeRule5: `case_decision` = **RJCT** then `reject_reason_code` **must** be provided.   \n- RejectReasonSchemeRule1: `reject_reason_code` = **ARDT** then `return_transaction_identification` **must** be provided. \n- RejectReasonSchemeRule2: `reject_reason_code` = **ARDT** then `narrative` **must not** be provided. \n- RejectReasonSchemeRule3: `reject_reason_code` = **CUST** then `narrative` **must** be provided. \n- RejectReasonSchemeRule4: `reject_reason_code` = **CUST** then `return_transaction_identification` **must not** be provided."
      operationId: queryResolution
      parameters:
        - $ref: "#/components/parameters/correlationID"
        - $ref: "#/components/parameters/messageID"
        - $ref: "#/components/parameters/priority4"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredSubmissionResource'
        description: Secured resource to create a mandate in the MMS. Refer to Model/Schema **QueryResolutionRequest** for unencrypted payload object
        required: true
      responses:
        202:
          $ref: '#/components/responses/202'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
        502:
          $ref: '#/components/responses/502'
        503:
          $ref: '#/components/responses/503' 
        504:
          $ref: '#/components/responses/504'     
        default:
          $ref: '#/components/responses/default'        
components:
  securitySchemes:
    bearerAuth:            
          type: http
          scheme: bearer
          bearerFormat: uuid
          description: Bearer token obtained during token exchange
    apiKeyAuth:        
      type: apiKey
      in: header
      name: apikey
      description: API key to authorize requests.
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:  
          authorizationUrl: https://api.fileactive.anzgcis.com/auth
          tokenUrl: https://api.fileactive.anzgcis.com/v1.0/auth
          scopes:
            AU.INSTO.PAYTO.MANDATE.WRITE: Create & Maintain Mandate<br>
            AU.INSTO.PAYTO.MANDATE.READ: Retrieve Mandate Details<br>
            AU.INSTO.PAYTO.MPIR.WRITE: Create Mandated Payment Initiation Request
  parameters:
    correlationID:  
      name: X-Correlation-Id
      in: header
      description: Optional correlation ID provided by the data consumer that should
        be reflected back in the response headers. Can be used for reporting and
        logging.
      schema:
        $ref: '#/components/schemas/UUID'
    messageID:
      name: X-Message-Id
      in: header
      description: Duplicate check using point to point reference, as assigned by
        the instructing party, and sent to the next party in the chain to unambiguously
        identify the message
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    requestKey:
      name: X-RequestKey
      in: header
      description: Internal End to End key used for support and reporting purposes
      schema:
        $ref: '#/components/schemas/UUID'
      example: 325ea624-ac19-47e2-94ef-a1ab4e487275
    priority:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. This value does not affect the priority for processing within the MMS. It may, depending on topic configuration, influence which topic any generated notification is sent to.
      required: true
      schema:
        $ref: '#/components/schemas/NotificationPriority1Code'
    priority2:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. This value does not affect the priority for processing within the MMS. It may, depending on topic configuration, influence which topic any generated notification is sent to. <br><br> Only **UNATTENDED** is supported for this request type.
      required: true
      schema:
        $ref: '#/components/schemas/NotificationPriority2Code'    
    priority3:
      name: priority
      in: header
      description: MPIR Priority (attended/unattended). Urgency or order of importance that the originator would like the recipient of the payment instruction to apply to the processing of the payment instruction. Will be included in any generated notification. 
      required: true
      schema:
        $ref: '#/components/schemas/NotificationPriority1Code' 
    priority4:
      name: priority
      in: header
      description: Priority (attended/unattended) to be included in any generated notification. Urgency or order of importance that the originator would like the recipient of the PayTo query resolution to apply to the processing of the query resoluton.<br><br> Only **UNATTENDED** is supported for this request type.
      required: true
      schema:
        $ref: '#/components/schemas/NotificationPriority2Code'               
  responses:
    200OKAuth:
      description: 'Bearer token (Opaque Token) returned after a token request'
      headers:
        x-RequestKey:
          schema:
            $ref: '#/components/parameters/requestKey'
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/AuthTokenResponse'
    202:
      description: Accepted the request for processing. Processing result will be provided via Webhook
      headers:
        X-Correlation-Id:
          schema:
            $ref: '#/components/schemas/UUID'
          description: GUID echo'd from customer request
        X-RequestKey:
          schema:
            $ref: '#/components/parameters/requestKey'
          description: Request Key provided to customer for support and reporting purposes.
    400Auth:
      description: Bad Request, message format does not match expected schema
    400:
      description: Bad Request
      headers:
        X-Correlation-Id:
          schema:
            $ref: '#/components/schemas/UUID'
          description: GUID echo'd from customer request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    401:
      description: Unauthorised
    403:
      description: Forbidden
    429:
      description: Action exceeds allocated limits
    500Auth:
      description: Internal Server Error, contact support
    500:
      description: Internal Server Error
      headers:
        X-Correlation-Id:
          schema:
            $ref: '#/components/schemas/UUID'
          description: GUID echo'd from customer request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    502:
        description: Bad Gateway
    503:
      description: Service Unavailable
    504:
      description: Gateway Timeout 
    default:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ActiveCurrencyAndAmount:
      type: object
      description: A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
      additionalProperties: false
      properties:
        currency:
          type: string
          description: A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".
          pattern: ^[A-Z]{3,3}$
          enum: 
            - AUD
        amount:
          type: string
          maxLength: 19
          pattern: ^(0|[1-9][0-9]{0,15})\.\d{2}$
      required: 
        - currency
        - amount    
    AuthTokenRequest:
      required:
      - grant_type
      - client_assertion_type
      - scope
      - client_assertion
      type: object
      properties:
        grant_type:
          description: Specify the type credential requested
          type: string
          example: 'client_credentials'
        client_assertion_type:
          description: Describes the type of client assertion provided in the message request
          type: string
          example: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'
        scope:
          $ref: '#/components/schemas/Scopes'
        client_assertion:
          $ref: '#/components/schemas/ClientAssertion'
    AuthTokenResponse:
      type: object
      description: Response to report the status of a customer credit transfer.
      additionalProperties: false
      properties:
        expires_in:
          description: Indication on how long a token is valid for
          type: integer
        token_type: 
          description: Type of token returned
          type: string
        access_token:
          description: Opaque token returned as part of request, GCIS does not provide the full access token
          type: string   
      example:
        expires_in: 3600
        token_type: 'Bearer'
        access_token: 'eaaa13ee-b596-a8cc-b9d4-f778f8bb9377'
    ClientAssertion:
        required:
        - sub
        - exp
        - aud
        type: object
        properties:
          sub:
            type: string
            description: Customer Code as provided by ANZ onboarding
            example: 'CUSTOMERA'
          exp:
            type: integer
            description: EPOCH date and time
            example: '1619658591'
            maxLength: 10
            minLength: 10
          aud:
            type: string
            description: Specify the intended audience of the token request
            example: 'https://api.fileactive.uat.anzgcis.com/auth'
    ErrorDetail:
      type: object
      required: 
        - severity
        - code
        - text
      properties:
        severity:
          type: string
          description: Severity of the error
          enum:
            - Fatal
            - Transient
          example: Fatal
        code:
          type: string
          description: |
            Error code (format: ECxxx_xxx)
          example: EC004_001
        text:
          type: string
          description: Human readable description of the error
          example: Internal Server Error, please contact support.
    ErrorResponse:
      type: object
      properties:
        status:
          type: object
          description: Summary of the error
          $ref: '#/components/schemas/ErrorDetail'
    Frequency6Code:
      type: string
      description: |-
        Specifies the regularity of an event.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ADHO</td><td>Adhoc</td><td>Event takes place on request or as necessary.</td></tr><tr><td>DAIL</td><td>Daily</td><td>Event takes place every day.</td></tr><tr><td>FRTN</td><td>Fortnightly</td><td>Event takes place every two weeks.</td></tr><tr><td>INDA</td><td>IntraDay</td><td>Event takes place several times a day.</td></tr><tr><td>MIAN</td><td>SemiAnnual</td><td>Event takes place every six months or two times a year.</td></tr><tr><td>MNTH</td><td>Monthly</td><td>Event takes place every month or once a month.</td></tr><tr><td>QURT</td><td>Quarterly</td><td>Event takes place every three months or four times a year.</td></tr><tr><td>WEEK</td><td>Weekly</td><td>Event takes place once a week.</td></tr><tr><td>YEAR</td><td>Annual</td><td>Event takes place every year or once a year.</td></tr></table>
      enum:
      - YEAR
      - MNTH
      - QURT
      - MIAN
      - WEEK
      - DAIL
      - ADHO
      - INDA
      - FRTN
    MandateCreationRequest:
      type: object
      description: "Request to register payment mandate in central mandate service."
      additionalProperties: false
      properties:
        mps_user_id:
          type: string
          description: |-
            MPS User Id associated with this create mandate request
          minLength: 1
          maxLength: 10
          example: 10002005  
        request_id:
          allOf: 
          - $ref: '#/components/schemas/UUID'            
          description: |-
            Request UUID that identifies the mandate creation operation to be performed. This must be a Universally Unique IDentifier (UUID). This UUID must be unique amongst all request_ids passed to this end-point by the same MPS User. If a request is encountered with a request ID that has previously been used then a duplicate check will be performed by comparing the digest of the current request with the digest of the previous request. If the digests match then the details of the previous mandate creation will be returned. If the digests do not match then an HTTP 409 will be returned.
        resolution_requested_by:
          type: string
          description: |-
            Optional time used to indicate by when resolution of a bilateral action is requested from the other party to the mandate. It will be provided in any notification sent to the counterparty. This time is for informational purposes only and does not affect the expiry time imposed by the MMS. <br><br>An ISODateTime whereby all timezoned dateTime values are UTC.<br><br> For an ATTENDED request **resolution_requested_by** should be within 5 minutes, ANZ will default to 5 minutes where not provided or override to 5 minutes where exceeds 5 minutes.<br><br> For an UNATTENDED request **resolution_requested_by** should be within 5 calendar days, ANZ will default to 5 calendar days where not provided or override to 5 calendar days where exceeds 5 calendar days.<br><br>
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
        initiation_request_identification:
          type: string
          description: |-
            Identification for the mandate request, as originally assigned by the initiating party.
            Specifies a character string with a maximum length of 35 ASCII printable characters.
          pattern: ^[ -~]{1,35}$
        mandate_type:
          $ref: '#/components/schemas/MandateType1Code'
        establishment_scheme:
          $ref: '#/components/schemas/MandateEstablishmentScheme1Code'
        mandate_purpose_code:
          type: string
          description: |-
            Specifies the high level purpose of the mandate based on a set of pre-defined categories.
            Specifies an alphanumeric string with a length of 4 characters.
            <table><tr><th>Code</th><th>Description</th></tr><tr><td>DEPD</td><td>Dependant Support Payments</td></tr><tr><td>GAMP</td><td>Gambling Payments</td></tr><tr><td>GOVT</td><td>Government Payments</td></tr><tr><td>LOAN</td><td>Loan Payments</td></tr><tr><td>MORT</td><td>Mortgage Payments</td></tr><tr><td>OTHR</td><td>Other Service Payments</td></tr><tr><td>PENS</td><td>Pension Payments</td></tr><tr><td>PERS</td><td>Personal Payment</td></tr><tr><td>RETL</td><td>Retail Payments</td></tr><tr><td>SALA</td><td>Salary Payments</td></tr><tr><td>TAXS</td><td>Tax Payments</td></tr><tr><td>UTIL</td><td>Utility Payments</td></tr></table>   
          pattern: ^[a-zA-Z0-9]{4}$
          enum: 
          - DEPD
          - GAMP
          - GOVT
          - LOAN
          - MORT
          - OTHR
          - PENS
          - PERS
          - RETL
          - SALA
          - TAXS
          - UTIL
        description:
          type: string
          description: |-
            Reason for the mandate setup as narrative text.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        validity_start_date:
          type: string
          description: |-
            Start date of the validity of the mandate. The mandate is valid as of 00:00:00.000 Australia Sydney time on this date.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
        validity_end_date:
          type: string
          description: |-
            End date of the validity of the mandate. If specified, the mandate is valid until 23:59:59.999 Australia Sydney time on this date.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
        transfer_arrangement:
          type: string
          description: |-
            Indication of future transfer date, conditions of sale and requirement to hold funds.
            Specifies a character string with a maximum length of 140 characters.
          minLength: 1
          maxLength: 140
        automatic_extension_indicator:
          type: boolean
          description: Automatic renewal of a mandate arrangement at the end of the defined period (period start through period end).
        debtor_information:
          $ref: '#/components/schemas/MandatePartyInformation1Debtor'
        creditor_information:
          $ref: '#/components/schemas/MandatePartyInformation1Creditor'
        payment_initiator_information:
          $ref: '#/components/schemas/MandatePartyInformation2'
        payment_information:
          $ref: '#/components/schemas/MandatePaymentInformation1'
        additional_information:
          type: string
          description: |-
            Additional information, in free text form, to complement the mandate information.
            Specifies a character string with a maximum length of 140 characters.

            Where the Mandate is a Migrated DDR (`establishment_scheme` is equal to value 'MGCR'), this field is used to denote the existing BECS User ID of the Initiating Party.
            The format is //BECSID/xxxxxx where xxxxxx is the BECS DD User ID used by the Initiating Party in an existing DDR arrangement.
          minLength: 1
          maxLength: 140
      required:
      - mps_user_id
      - request_id
      - initiation_request_identification
      - mandate_type
      - establishment_scheme
      - mandate_purpose_code
      - description
      - short_description
      - validity_start_date
      - automatic_extension_indicator
      - debtor_information
      - payment_information
    MandateEstablishmentScheme1Code:
      type: string
      description: |-
        Identifies the arrangement (unilateral or bilateral) and party that established the mandate.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>AUPM</td><td>AuthorisedPaymentMandate</td><td>Established bilaterally as Authorised Payment Mandate.</td></tr><tr><td>MGCR</td><td>MigratedByCreditor</td><td>Established by migration from legacy service by Creditor.</td></tr></table>
      enum:
      - AUPM
      - MGCR
    MandatePartyInformation1Creditor:
      type: object
      description: "Information concerning the creditor party identified in the mandate."
      additionalProperties: false
      properties:
        party_type:
          $ref: '#/components/schemas/PartyType17Code'
        party_name:
          type: string
          description: |-
            Name by which the party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        ultimate_party_name:
          type: string
          description: |-
            Name by which the ultimate party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        account_identification_type_code:
          type: string
          description: "Type of account identification, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>BBAN</td><td>Australian Bank-State-Branch Code (BSB)</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum:
          - BBAN
        account_identification:
          type: string
          description: "Unique and unambiguous identification of the account between the account owner and the account servicer. For example:\r\n   - Basic Bank Account Number - account number with BSB (Bank-State-Branch) prefix. \n\nSpecifies a character string with a maximum length of 34 ASCII printable characters."
          pattern: ^[ -~]{1,34}$
          example: '013010230008937'
        party_reference:
          type: string
          description: |-
            Specifies underlying party reference associated with the mandate, for example Customer Reference, Customer Number, Membership Number, Subscription Number, or Name.
            Specifies a character string with a maximum length of 35 ASCII printable characters.
          pattern: ^[ -~]{1,35}$
      required:
      - party_name
      - ultimate_party_name
      - account_identification_type_code
      - account_identification
    MandatePartyInformation1Debtor:
      type: object
      description: "Information concerning the debtor party identified in the mandate. \n\nThe following rules apply to this structure:\n- AccountIdentificationRule1: If `account_identification_type_code` is equal to value 'ALIA' then `account_alias_type_code`  and `account_alias_identification` must be present, and `account_identification` must be absent.\n- AccountIdentificationRule2: If `account_identification_type_code` is equal to value 'BBAN' then `account_identification` must be present and start with BSB (bank-state-branch), and `account_alias_type_code` and `account_alias_identification` must be absent.\n- AccountIdentificationRule3: If `establishment_scheme` is equal to value 'MGCR' then `account_identification_type_code` is equal to value 'BBAN'."
      additionalProperties: false
      properties:
        party_type:
          $ref: '#/components/schemas/PartyType17Code'
        party_name:
          type: string
          description: |-
            Name by which the party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        ultimate_party_name:
          type: string
          description: |-
            Name by which the ultimate party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        account_identification_type_code:
          type: string
          description: "Type of account identification, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>ALIA</td><td>Alias (PayID)</td></tr><tr><td>BBAN</td><td>Australian Bank-State-Branch Code (BSB)</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum:
          - ALIA
          - BBAN
        account_identification:
          type: string
          description: "Unique and unambiguous identification of the account between the account owner and the account servicer. For example:\r\n   - Basic Bank Account Number - account number with BSB (Bank-State-Branch) prefix. \n\nSpecifies a character string with a maximum length of 34 ASCII printable characters."
          pattern: ^[ -~]{1,34}$
          example: '013010230008937'
        account_alias_type_code:
          type: string
          description: "Name of the Alias Type, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>AUBN</td><td>Australian Business Number</td></tr><tr><td>EMAL</td><td>Email address</td></tr><tr><td>ORGN</td><td>Organisation Identifier</td></tr><tr><td>TELI</td><td>Telephone Number</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum: 
          - AUBN
          - EMAL
          - ORGN
          - TELI
        account_alias_identification:
          type: string
          description: |-
            Identification used to indicate the account identification under another specified name.
            Specifies a character string with a maximum length of 2048 characters.
          minLength: 1
          maxLength: 2048
        party_reference:
          type: string
          description: |-
            Specifies underlying party reference associated with the mandate, for example Customer Reference, Customer Number, Membership Number, Subscription Number, or Name.
            Specifies a character string with a maximum length of 35 ASCII printable characters.
          pattern: ^[ -~]{1,35}$
      required:
      - party_type  
      - party_name
      - ultimate_party_name
      - account_identification_type_code
    MandatePartyInformation2:
      type: object
      description: 'Information concerning a payment initiator party identified in the mandate. '
      additionalProperties: false
      properties:
        party_name:
          type: string
          description: |-
            Name by which the party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        party_legal_name:
          type: string
          description: |-
            Name by which the party is legally known.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$ 
      required: 
        - party_name
        - party_legal_name
    MandatePaymentInformation1:
      type: object
      description: "Set of characteristics detailing mandate payment information.\n  \n**Property descriptions**:\n - **payment_frequency** - Regularity with which instructions are to be created and processed.\n - **payment_amount_type** - Identifies the mandate payment arrangement.\n - **first_payment_amount** - Amount different from the payment amount, as it includes the costs associated with the first debited amount.\n - **last_payment_amount** - Last payment amount different  to the payment amount.\n - **amount** - Fixed amount to be debited from the debtor's account.\n - **maximum_amount** - Maximum amount that may be paid from the debtor's account, per instruction.\n  \nThe following rules apply to this structure:\n- PaymentAmountTypeRule: If `payment_amount_type` code is equal to value 'FIXE' then `amount` must be present."
      additionalProperties: false
      properties:
        payment_frequency:
          $ref: '#/components/schemas/Frequency6Code'
        payment_execute_not_before_time:
          type: string
          description: |-
            Indicates that each execution of the mandate payment should not occur before a given time of that execution day.
            An ISO time whereby all timezoned time values are UTC.
          pattern: ^(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)|(-)$
        count_per_period:
          type: string
          pattern: ^(?=.{1,19}$)[0-9]{0,19}(?:\.[0-9]{0,18})?$
          description: Qualifies the frequency in terms of the number of instructions to be created and processed during the specified period.
        point_in_time:
          type: string
          description: |-
            Qualifies the frequency in terms of an exact point in time or moment within the specified period.
            Specifies a numeric string with an exact length of 2 digits.
          pattern: ^[0-9]{2}$
        payment_amount_type:
          $ref: '#/components/schemas/MandatePaymentType1Code'
        first_payment_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        last_payment_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        maximum_amount:
          $ref: '#/components/schemas/ActiveCurrencyAndAmount'
        first_payment_date:
          type: string
          description: |-
            Date of the first payment predefined in mandate.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
        last_payment_date:
          type: string
          description: |-
            Date of the last payment predefined in mandate.
            A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      required:
      - payment_frequency
      - payment_amount_type
    MandatePaymentType1Code:
      type: string
      description: |-
        Identifies the mandate payment arrangement.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>BALN</td><td>Balloon</td><td>Payment amount is fixed with large final payment amount.</td></tr><tr><td>FIXE</td><td>Fixed</td><td>Payment amount is fixed.</td></tr><tr><td>USGB</td><td>UsageBased</td><td>Payment amount is based on usage.</td></tr><tr><td>VARI</td><td>Variable</td><td>Payment amount is variable.</td></tr></table>
      enum:
      - BALN
      - FIXE
      - USGB
      - VARI    
    MandateStatusChange1Code:
      type: string
      description: |-
        Enumeration of possible status changes.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>CNCL</td><td>Cancel</td><td>Cancel a mandate.</td></tr><tr><td>RELS</td><td>Release</td><td>Unsuspend a suspended mandate.</td></tr><tr><td>SUSP</td><td>Suspend</td><td>Suspend an active mandate.</td></tr></table>
      enum:
      - CNCL
      - RELS
      - SUSP
    MandateStatusChangeRequest:
      type: object
      description: "Request to change the status of a mandate."
      additionalProperties: false
      properties:
        mps_user_id:
          type: string
          description: |-
            MPS User Id associated with this change mandate status request
          minLength: 1
          maxLength: 10
          example: 10002005    
        request_id:
          allOf: 
          - $ref: '#/components/schemas/UUID'            
          description: |-
            Request UUID that identifies the mandate creation operation to be performed. This must be a Universally Unique IDentifier (UUID). This UUID must be unique amongst all request_ids passed to this end-point by the same MPS User. If a request is encountered with a request ID that has previously been used then a duplicate check will be performed by comparing the digest of the current request with the digest of the previous request. If the digests match then the details of the previous mandate creation will be returned. If the digests do not match then an HTTP 409 will be returned.
        change:
          $ref: '#/components/schemas/MandateStatusChange1Code'
        reason_code:
          type: string
          description: |-
            Code defining the reason for the status change to the mandate.
            Specifies an alphanumeric string with a length of 4 characters.
            <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>MD17</td><td>RequestedByInitiatingParty</td><td>Requested By Initiating Party.</td></tr></table>
          enum:
          - MD17
          pattern: ^[a-zA-Z0-9]{4}$
        reason_description:
          type: string
          description: |-
            Description of the change reason.
            Specifies a character string with a maximum length of 256 characters.
          minLength: 1
          maxLength: 256
      required:
      - mps_user_id
      - request_id
      - change
    MandateType1Code:
      type: string
      description: |-
        Identifies the type of mandate.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>DDTP</td><td>DirectDebit</td><td>Mandate type relates to Direct Debit payment instrument.</td></tr></table>
      enum:
      - DDTP
    MPIRCreationRequest:
      type: object
      description: "Request to initiate a mandated payment."
      additionalProperties: false
      properties:
        creation_date_time:
          type: string
          description: |-
            Date and time when MPIR was created. UTC expressed without offset, i.e. YYYY-MM-DDThh:mm:ss.sssZ
            An ISODateTime whereby all timezoned dateTime values are UTC.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]{1,3})?(?:Z)$
          example: 2023-06-13T15:01:20.246Z
        requested_execution_date:
          type: string
          description: Date instruction to be processed. Can be future dated, up to 60 calendar days. 
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
          example: 2023-06-13
        mps_user_id:
          type: string
          description: |-
            MPS User Id associated with this MPIR
          minLength: 1
          maxLength: 10
          example: 10002005    
        instruction_details:
          type: object
          description: Instruction details specific to MPIR
          additionalProperties: false
          properties: 
            instruction_identification:
              type: string
              description: Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction. 
              minLength: 1
              maxLength: 35              
              example: TC121/1471873823
            end_to_end_identification:
              type: string
              description: Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. <br><br> ANZ recommends populating with something meaningful as contents will flow through to statement narrative. Populating with "NOT PROVIDED" or similar is not recommended.
              minLength: 1
              maxLength: 35
              example: BILL00237679          
            uetr:
              allOf:
              - $ref: '#/components/schemas/UUID'
              description: > 
                Universally unique identifier to provide an end-to-end reference of a payment transaction.
              example: a690be37-9caf-44e4-bae1-475b50a8cb18
            mandate_identification:
              type: string
              description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
              pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
              example: 247de1c0c3a911edafa10242ac120002
            instructed_amount:
              $ref: '#/components/schemas/ActiveCurrencyAndAmount'
            creditor_information:
              $ref: '#/components/schemas/MPIRPartyInformation1Creditor'
            remittance_information_unstructured:
              type: array
              example: FIRST LINE SECOND LINE
              description: Information supplied to enable the matching/reconciliation of an
                entry with the items that the payment is intended to settle, such as
                commercial invoices in an accounts' receivable system, in an
                unstructured form.
              items:
                type: string
                minLength: 1
                maxLength: 140
              maxItems: 2      
          required:
            - instruction_identification
            - end_to_end_identification
            - mandate_identification
            - instructed_amount          
      required:
      - creation_date_time
      - requested_execution_date  
      - mps_user_id
      - instruction_details
    MPIRPartyInformation1Creditor:
      type: object
      description: "Information concerning the creditor party identified in the MPIR."
      additionalProperties: false
      properties:
        party_name:
          type: string
          description: |-
            Name by which the party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        ultimate_party_name:
          type: string
          description: |-
            Name by which the ultimate party is known and which is usually used to identify that party.
            Specifies a character string with a maximum length of 140 ASCII printable characters.
          pattern: ^[ -~]{1,140}$
        account_identification_type_code:
          type: string
          description: "Type of account identification, in a coded form.\nSpecifies an alphanumeric string with a length of 4 characters.<table><tr><th>Code</th><th>Description</th></tr><tr><td>BBAN</td><td>Australian Bank-State-Branch Code (BSB)</td></tr></table>"
          pattern: ^[a-zA-Z0-9]{4}$
          enum:
          - BBAN
        account_identification:
          type: string
          description: "Unique and unambiguous identification of the account between the account owner and the account servicer. For example:\r\n   - Basic Bank Account Number - account number with BSB (Bank-State-Branch) prefix. \n\nSpecifies a character string with a maximum length of 34 ASCII printable characters."
          pattern: ^[ -~]{1,34}$
          example: '013010230008937'
      required:
      - party_name
      - ultimate_party_name
      - account_identification_type_code
      - account_identification
    NotificationPriority1Code:
      type: string
      description: |-
        Defines the notification priority.
        <table><tr><th>Code</th><th>Description</th></tr><tr><td>ATTENDED</td><td> Attended mode of operation.</td></tr><tr><td>UNATTENDED</td><td>Unattended mode of operation.</td></tr></table>
      enum:
      - ATTENDED
      - UNATTENDED
    NotificationPriority2Code:
      type: string
      description: |-
        Defines the notification priority.
        <table><tr><th>Code</th><th>Description</th></tr><tr><td>UNATTENDED</td><td>Unattended mode of operation.</td></tr></table>
      enum:
      - UNATTENDED
    PartyType17Code:
      type: string
      description: |-
        Specifies the type of party involved in the transaction.
        <table><tr><th>Code</th><th>Name</th><th>Description</th></tr><tr><td>ORGN</td><td>Organisation</td><td>Party is an organisation.</td></tr><tr><td>PERS</td><td>Person</td><td>Party is an private individual.</td></tr></table>
      enum:
      - ORGN
      - PERS
    QueryResolutionRequest:
      type: object
      description: |-
        PayTo Query Resolution
      additionalProperties: false
      properties:
        mps_user_id:
          type: string
          description: |-
            MPS User Id associated with this query resolution request
          minLength: 1
          maxLength: 10
          example: 10002005  
        request_id:
          allOf: 
          - $ref: '#/components/schemas/UUID'            
          description: |-
            Request UUID that identifies the query resolution operation to be performed. This must be a Universally Unique IDentifier (UUID). This UUID must be unique amongst all request_ids passed to this end-point by the same MPS User. If a request is encountered with a request ID that has previously been used then a duplicate check will be performed by comparing the digest of the current request with the digest of the previous request. If the digests match then the details of the previous mandate creation will be returned. If the digests do not match then an HTTP 409 will be returned.
        case_id:
          type: string
          description: |-
            Case Identifier. A unique case reference as assigned by ANZ. To be referenced when providing a Query Resolution.   
          minLength: 1
          maxLength: 20  
          example: ANZAU230821-00002
        case_decision:
          type: string
          description: |-
            Case Decision.
            <table><tr><th>Code</th><th>Name</th><th>Case Type</th></tr><tr><td>ACPT</td><td>Accept Payment Return</td><td>Mandate Query Payments</td></tr><tr><td>FINO</td><td>Final Outcome</td><td>Mandate Query Case</td></tr><tr><td>PEND</td><td>Pending Decision</td><td>ANY</td></tr><tr><td>RJCT</td><td>Reject Payment Return</td><td>Mandate Query Payments</td></tr></table>
          enum:
            - ACPT
            - FINO
            - PEND
            - RJCT
        mandate_identification:
          type: string
          description: "Unique ID, as assigned by the MMS, to unambiguously identify the mandate. This ID must be used to identify the mandate for all further operations on the mandate.\nUniversally Unique IDentifier (UUID) version 1, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\" without the 4 hyphen separators.\r\nFor example: '00000000000010008000000000000000' instead of  '00000000-0000-1000-8000-000000000000' (without quotes)"
          pattern: ^[a-f0-9]{12}1[a-f0-9]{3}[89ab][a-f0-9]{15}$
          example: 247de1c0c3a911edafa10242ac120002
        reject_reason_code:
          type: string
          description: |-
            Rejection Reason Code.
            <table><tr><th>Code</th><th>Name</th></tr><tr><td>ARDT</td><td>Already Returned</td></tr><tr><td>CUST</td><td>Customer Decision</td></tr></table>
            <br>
            To be provided when case_decision = RJCT.
          enum:
            - ARDT
            - CUST
        return_transaction_identification:
          type: string
          description: >-
            Unique reference, as assigned by the Payee, to unambiguously identify the return transaction. <br><br>
            To be provided when reject_reason_code = ARDT.
          minLength: 1
          maxLength: 35
          example: RETURN/123
        narrative:
          type: string
          description: |-
            Narrative as sent by Payee. <br><br>
            To be provided when case_decision = FINO or reject_reason_code = CUST. <br><br> Specifies a character string with a maximum length of 1500 ASCII printable characters.
          minLength: 1
          maxLength: 1500  
          pattern: ^[ -~]{1,1500}$
          example: Some text
      required:
        - mps_user_id
        - request_id
        - case_id
        - case_decision
        - mandate_identification
    Scopes:
      type: string
      description: >-
        AU.INSTO.PAYTO.MANDATE.WRITE - Create & Maintain Mandate<br>
        AU.INSTO.PAYTO.MANDATE.READ - Retrieve Mandate Details & Reply to a Query<br>
        AU.INSTO.PAYTO.MPIR.WRITE - Create Mandated Payment Initiation Request
      enum:
      - AU.INSTO.PAYTO.MANDATE.WRITE
      - AU.INSTO.PAYTO.MANDATE.READ
      - AU.INSTO.PAYTO.MPIR.WRITE
    SecuredSubmissionResource:
      type: object
      properties:
        secured_payload:
          type: string
          description: Encrypted and secured payload
          x-jws-signature:
            algorithm: RS256
          x-jwe-encryption:
            algorithm: RSA-OAEP
            encryption: A256CBC-HS512
      required:
        - secured_payload
      example:
        secured_payload: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpbnN0cnVjdGlvbl9pZGVudGlmaWNhdGlvbiI6IlRDMTIxLzE0NzE4NzM4MjMiLCJlbmRfdG9fZW5kX2lkZW50aWZpY2F0aW9uIjoiTk9UUFJPVklERUQiLCJjcmVhdGlvbl9kYXRlX3RpbWUiOiIyMDE4LTA5LTE3VDA5OjQ1OjQ3WiIsImluaXRpYXRpbmdfcGFydHlfbmFtZSI6IkN1c3RvbWVyQSIsInJlcXVlc3RlZF9leGVjdXRpb25fZGF0ZSI6IjIwMTgtMDktMTciLCJkZWJ0b3JfbmFtZSI6IkJJTEJPIEJBR0dJTlMiLCJkZWJ0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMzQyMTIzNDU2NyIsImRlYnRvcl9hY2NvdW50X3R5cGUiOiJCQkFOIiwiaW5zdHJ1Y3RlZF9hbW91bnQiOnsiY3VycmVuY3kiOiJBVUQiLCJhbW91bnQiOiI1NjIuODkifSwiY3JlZGl0b3JfbmFtZSI6IlNBTVdJU0UgR0FNR0VFIiwiY3JlZGl0b3JfYWNjb3VudF9pZGVudGlmaWNhdGlvbiI6IjAxMDE2OTg3NjU0MzIxIiwiY3JlZGl0b3JfYWNjb3VudF90eXBlIjoiQkJBTiIsImNyZWRpdG9yX2FnZW50X2JpYyI6Ik5PVFBST1ZJREVEIiwicmVtaXR0YW5jZV9pbmZvcm1hdGlvbl91bnN0cnVjdHVyZWQiOlsiRklSU1QgTElORSIsIlNFQ09ORCBMSU5FIl19.aR2RMEVTuOOI1YuUCf2Ppo3Bwtf2_91WMvLd3IIA0ToHBDn0II36FumIz2RrwiUNHBMZo41Qmjv_zt9TQbq61csx2lRZcQNNsstAXKZWI4oZjlBaenj3HvY2_ztxS2IPNZNlVUQrw8A51-1dm-EeVTsqwhxs-Ir6d1FCee5SaNBrhtfaDBGAwjtXolPJuyYve0J3F8X-JwKPLBUaQH5LgGlTOSasC0vsKqhfpZOc-3rS39UA7q0jHQyqcJKrhinEyWlTFU9PcOh2W4-0hXiPaLJ_PA-_EkY5kYBnBvUWofVy35ZnB_u0wv0gxvVVDYKLGUpOGblaWRUY09SHx52Njw'
    UUID:
      type: string
      example: '71d6fb19-7515-40dc-b045-e17550b67600'
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
tags:
  - name: Authorisation
    description: Operations related to authentication & authorisation.
  - name: AuthTokenRequest
    description: <SchemaDefinition schemaRef="#/components/schemas/AuthTokenRequest" />
  - name: Mandate
    description: Operations related to mandates.
  - name: MandateCreationRequest
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateCreationRequest" />
  - name: MandateStatusChangeRequest
    description: <SchemaDefinition schemaRef="#/components/schemas/MandateStatusChangeRequest" />
  - name: MPIRCreationRequest
    description: <SchemaDefinition schemaRef="#/components/schemas/MPIRCreationRequest" />
  - name: QueryResolutionRequest
    description: <SchemaDefinition schemaRef="#/components/schemas/QueryResolutionRequest" />
  - name: SecuredSubmissionResource
    description: <SchemaDefinition schemaRef="#/components/schemas/SecuredSubmissionResource" />
x-tagGroups:
  - name: Paths
    tags: 
      - Authorisation
      - Mandate
      - MPIR
      - Query
  - name: Models
    tags: 
      - AuthTokenRequest
      - MandateCreationRequest
      - MandateStatusChangeRequest
      - MPIRCreationRequest
      - QueryResolutionRequest
      - SecuredSubmissionResource