openapi: 3.0.1
info:
  title: Fileactive Real Time Notification API
  description: |-
    Fileactive Real Time Notification API.<br><br>

    It is important for customers using the NPP Real Time Payment Notification service to
    verify the `x-Notification-Signature` prior to processing the Notification. JWS Algorithm
    is RS256.<br><br>

    It is important for customers using the NPP Real Time Payment Notification service to
    check for duplicate notifications. Duplicate notifications can arise when
    there're system or network issues followed by automated or manual retries. ANZ
    recommends duplicate checking be based on the transaction identifier
    `account_servicer_reference` . Performing this check will ensure multiple
    instances of the same notification are not processed more than once.
  version: 1.1.3
servers:
  - url: 'https://api.uat.example.com/v1.0'
    description: UAT Environment
  - url: 'https://api.example.com.au/v1.0'
    description: Production Environment
security:
  - apiKeyAuth: []    
paths:
  /npp/payment-notification:
    post:
      tags: 
        - Payment Notification
      summary: Real Time Notification
      description: >-
        API publishes a notification when settled funds sent via NPP are credited to a
        customers ANZ bank account.
      operationId: submitPaymentNotification
      externalDocs:
        description: RTN Additional Information
        url: "https://anz-insto.github.io/fileactive/rtn-info.html"  
      parameters:
        - name: x-Message-Id
          in: header
          description: >-
            Duplicate check using point to point reference, as assigned by the instructing party, and sent to the next party in the chain to unambiguously identify the message <br><br>
            
            Refer to `account_servicer_reference` for transaction level duplicate checking
          schema:
            type: string
            format: uuid
            example: 2157f49a-01d7-4e1a-aa0e-422073a312b8
          required: true
        - name: x-Notification-Signature
          in: header
          description: |
            The webhook includes a singature of the payload. The consumer is required to verify the signature prior to processing the RTN.  

            To verify the signature  
            1. Reconstruct the JWT
                1. BASE64 encode the JWT header i.e. `{"alg":"RS256","typ":"JWT"}`
                2. BASE64 encode the JWT payload i.e. `Request Body` 
                3. Extract signature from header `x-Notification-Signature`
                4. Concatenate all 3 components separated by "." (period) i.e. `header.payload.signature`
            2. Call JWT function to verify the signature using the ANZ provided public key, algorithm RS256 and the reconstructed JWT
                1. If valid signature then process RTN
                2. If invalid signature then reject RTN with a HTTP 401 (unauthorised)  
          schema:
            type: string
            example: chyG_yfwgiYigKenK3RF0mkB6-qQhYRECxF6ls-P6n4lpfgg8Q9naMuOcYu1-xW4MiaOWdB3uqmfck_KjFzYy3QF46TzFft2JqWvqOCB2_ZkNAZppRGFnjHd0vJ7STZt4dFA3GcU5gUpr3hLQfPDjqdofp0Z44_4Aat4DopEqRnNK9PdntkkbXgyKeDBx7NJV7dC1UstodLHG7nPZ3L0eVGXfw97lKEDcXAKgfrE-A-7_UbGixO7J2eX_PlfyEQt9h1L-2-Q5pRtyYpyY9XSp6kMl4bN9geuDsqtE5iFh68dV7Nl0ykdo68CYmEQpVY_6G3j79vPeeSyhs11eTlt6g
          required: true
      requestBody:
        description: Notification to customer of an NPP payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_to_customer_debit_credit_notification'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200Received'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '408':
          description: Request Timeout
          content: {}
        '429':
          description: Too Many Requests
          content: {}
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '503':
          description: Service Unavailable
          content: {}
        '504':
          description: Gateway Timeout
          content: {}
components:
  securitySchemes: 
    apiKeyAuth:
      type: apiKey
      in: header
      name: apikey
      description: >-
        API key to authorise requests. The webhook includes a `apikey` header, the header name and value can be customised based on the customer requirements.  The purpose of this header is for the consumer to validate the request is sent with an exampled `apikey` in order to authenticate ANZ as the sending party.  If the `apikey` is not valid, the consumer should return a HTTP `401 Unauthorized` response.
  responses:
    200Received:
      description: OK - Notification Received
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/success'
    400BadRequest:
      description: Bad Request
      content: 
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/error_response'
            example:
                - status: "400"
                  title: Bad Request
                  detail: Missing account identification
    500InternalServerError:
      description: Internal Server Error
      content: 
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/error_response'
            example:
              - status: "500"
                title: Internal Server Error
                detail: Server failure
  schemas:
    bank_to_customer_debit_credit_notification:
      type: object
      required:
        - message_identifier
        - creation_date_time
        - notification
      properties:
        message_identifier:
          type: string
          minLength: 1
          maxLength: 35
          description: Point to point reference, as assigned by the account servicing institution, and sent to the account owner or the party authorised to receive the message, to unambiguously identify the message.
          example: 2157F49A01D74E1AAA0E422073A312B8
        creation_date_time:
          allOf:  
          - $ref: '#/components/schemas/iso_date_time'
          description: UTC Date/Time the message was generated ISODateTime YYYY-MM-DDTHH:MM:SSZ
          example: '2022-10-13T22:46:26.8382745+00:00'
        notification:
          type: array
          minItems: 1
          description: Only a single notification per message will be provided
          items:
            type: object
            required:
              - identification
              - account_identification
            properties:
              identification:
                type: string
                minLength: 1
                maxLength: 35
                description: Unique identifier generated by ANZ to identify the notification.
                example: 257A4C86AA134B4FA1F988448E783EB2
              creation_date_time:
                allOf:
                - $ref: '#/components/schemas/iso_date_time'
                description: >
                  UTC Date/Time the message was generated ISODateTime YYYY-MM-DDTHH:MM:SSZ
                example: '2022-10-13T22:46:26.8382745+00:00'
              account_identification:
                type: string
                minLength: 1
                maxLength: 34
                description: Account identification assigned by an institution, includes BSB
                example: '165165000000100'
              account_issuer:
                type: string
                minLength: 1
                maxLength: 35
                description: Entity that assigns the identification
                example: '165165'
              entry:
                $ref: '#/components/schemas/entry'
    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          pattern: '^[A-Z]{3,3}$'
          description: >
            A code allocated to a currency by a Maintenance Agency under an
            international identification scheme, as described in the latest edition
            of the international standard ISO 4217 "Codes for the representation of
            currencies and funds"
          example: AUD
        amount:
          type: string
          maxLength: 19
          description: >-
            A number of monetary units specified in an active or a historic
            currency where the unit of currency is explicit and compliant with
            ISO 4217.
          example: '1100.00'
    credit_debit_indicator:
      type: string
      description: >
        Indicates whether the entry is a credit or a debit entry: CRDT = Credit, DBIT = Debit.
        Value will be "CRDT"
      example: CRDT
      enum:
        - CRDT
        - DBIT
    entry:
      type: array
      description: Only one entry will be provided per notification
      items:
          type: object
          required:
            - amount
            - credit_debit_indicator
            - status
          properties:
            entry_reference:
              type: string
              minLength: 1
              maxLength: 35
              description: Bank Reference entered in the initiating party channel. Defaults to "NOTPROVIDED". For ARM transactions will populate with the ARM account number.
              example: '845780010'
            amount:
              $ref: '#/components/schemas/amount'
            credit_debit_indicator:
              allOf:
                - $ref: '#/components/schemas/credit_debit_indicator'
            status:
              type: string
              description: >
                Status of an entry on the books of the account servicer. Value will be "BOOK" 
              example: BOOK
              enum:
                - BOOK
                - PNDG
                - INFO
            booking_date:
              allOf:
              - $ref: '#/components/schemas/iso_date'
              description: >
                Date when an entry is posted to an account on the account servicer's books	
              example: '2022-10-13'
            value_date:
              allOf:
              - $ref: '#/components/schemas/iso_date'
              description: >
                Date at which assets become available to the account owner in case of a credit 
                entry, or cease to be available to the account owner in case of a debit entry.
              example: '2022-10-13'
            domain:
              type: string
              description: >
                Specifies the business area of the underlying transaction. Value will be "PMNT"	
              example: PMNT 
              enum:
                - PMNT       
            family:
              type: string
              description: >
                Specifies the family and the sub-family of the bank transaction code. Value will be "RCDT"	
              example: RCDT
              enum:
                - ICDT
                - RCDT
            sub_family_code:
              type: string
              description: >
                Specifies the sub-product family within a specific family.
                Value will be "SDVA" (Same Day Value Credit Transfer)
              example: SDVA
              enum:
                - SDVA
            entry_details:
              type: array
              description: Only one entry details will be provided per notification
              items: 
                type: object
                properties:
                  transaction_details:
                    $ref: '#/components/schemas/transaction_details'
    iso_date:
      type: string
      description: >
        'A particular point in the progression of time in a calendar year
        expressed in the YYYY-MM-DD format. This representation is defined in
        XML Schema Part Datatypes Second Edition - W3C Recommendation 28 October
        2004 which is aligned with ISO 8601.'
      pattern: >-
        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$            
    iso_date_time:
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]+)?(?:Z|[+-][01]\d:[0-5]\d)?$
      type: string
      description: >-
        A particular point in the progression of time defined by a mandatory
        date and a mandatory time component, expressed in either UTC time format
        (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format
        (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format
        (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in 'XML
        Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October
        2004' which is aligned with ISO 8601.
          Note on the time format:
          1) beginning / end of calendar day
          00:00:00 = the beginning of a calendar day
          24:00:00 = the end of a calendar day
          2) fractions of second in time format
          Decimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.
    related_parties:
      type: object
      description: Set of elements used to identify the parties related to the underlying transaction. 
      properties:
        debtor_account_identification:
          type: string
          minLength: 1
          maxLength: 34
          description: Debtor account identification. Will be masked for most customers
          example: '000006789'
        debtor_account_issuer:
          type: string
          minLength: 1
          maxLength: 35
          description: Debtor account issuer. Will be masked for most customers
          example: '000999'   
        creditor_account_identification:
          type: string
          minLength: 1
          maxLength: 34
          description: >
            Creditor account identification. Will be ARM account when available, 
            otherwise will be posting account 
          example: '845780010'
        debtor_name:
          type: string
          minLength: 1
          maxLength: 140
          description: Debtor (payer) account name. Defaults to "NOTPROVIDED" 
          example: Andras Arato
        creditor_account_issuer:
          type: string
          minLength: 1
          maxLength: 35
          description: >
            Creditor account issuer. Will be ARM BSB when available,
            otherwise will be posting account BSB
          example: '012654'
        creditor_account_proxy:
          type: object
          required:
            - proxy_type
            - proxy_identification
          properties:
            proxy_type:
              type: string
              example: TELI
              enum:
                - AUBN
                - EMAL
                - ORGN
                - TELI
            proxy_identification:
              type: string
              minLength: 1
              maxLength: 2048
              description: Creditor account proxy identifier value.
              example: '+61403736550'
        creditor_name:
          type: string
          minLength: 1
          maxLength: 140
          description: Creditor (payer) account name. Defaults to "NOTPROVIDED"
          example: Holden Holdings 
    transaction_details:
      type: array
      description: Only one transaction will be provided per notification
      items:
        type: object
        properties:
          account_servicer_reference:
            type: string
            minLength: 1
            maxLength: 35
            description: >
              Unique reference as assigned by the account servicing institution to 
              unambiguously identify the entry <br> <br>

              It is important for customers using the NPP Real Time Payment Notification service to
              check for duplicate notifications. Duplicate notifications can arise when
              there're system or network issues followed by automated or manual retries. ANZ
              recommends duplicate checking be based on the transaction identifier
              `account_servicer_reference` . Performing this check will ensure multiple
              instances of the same notification are not processed more than once.
            example: PTM2022101389715
          end_to_end_identification:
            type: string
            minLength: 1
            maxLength: 35
            description: Reference entered in the initiating party channel. Defaults to "NOTPROVIDED"
            example: INV0123
          uetr:
            allOf:
            - $ref: '#/components/schemas/uuid_vs_identifier'
            description: > 
              Universally unique identifier to provide an end-to-end reference of a payment transaction.
            example: a690be37-9caf-44e4-bae1-475b50a8cb18
          transaction_identification:
            type: string
            minLength: 1
            maxLength: 35
            description: > 
              Unique identification as assigned by ANZ (for outward) or counter party FI for inward	
            example: CTBAAUSNXXXN20221013000310791599310
          proprietary:
            type: object
            required:
              - proprietary_type
              - proprietary_reference
            description: Proprietary reference related to the underlying transaction.
            properties:
              proprietary_type:
                type: string
                minLength: 1
                maxLength: 35
                description: >
                  Identifies the type of reference reported. Used to indicate the type of NPP payment.
                  Value will be "ServiceLevel" 
                example: ServiceLevel
              proprietary_reference:
                type: string
                minLength: 1
                maxLength: 35
                description: >
                  Proprietary reference specification related to the underlying transaction. <br>
                  "x2p1" is the Osko Overlay service <br>
                  "sct" is the Single Credit Transfer service <br>
                  "catsct" is the Category Purpose Payments service <br>
                  "04" is the service version number
                example: x2p1.04
          amount:
            $ref: '#/components/schemas/amount'
          credit_debit_indicator:
            allOf:
              - $ref: '#/components/schemas/credit_debit_indicator'
          amount_details:
            type: object
            properties:
              instructed_amount:
                $ref: '#/components/schemas/amount'
              transaction_amount:
                $ref: '#/components/schemas/amount'
          related_parties:
            $ref: '#/components/schemas/related_parties' 
          remittance_information:
            type: object
            properties:
              unstructured:
                type: array
                description: >-
                  Information supplied to enable the matching/reconciliation of an entry 
                  with the items that the payment is intended to settle, such as commercial 
                  invoices in an accounts' receivable system, in an unstructured form.
                example: ['👨 My emittance info','INV0123']
                items:
                  type: string
                  minLength: 1
                  maxLength: 140
                minItems: 1
                maxItems: 2
          return_information:
            type: object
            description: Only a single return reason will be provided for returned payments
            properties:
                reason:
                  type: object
                  description: Refer to list of Return Reason Codes for possible values
                  required:
                    - code
                  properties:
                    code:
                      type: string
                      example: FOCR
                      minLength: 1
                      maxLength: 4
                additional_information:
                  type: array
                  description: >-
                    Additional information as to why payment was returned
                  example: ['Additional Information text 1', 'Additional Information text 2']
                  items:
                    type: string
                    minLength: 1
                    maxLength: 105
    uuid_vs_identifier:
      type: string
      format: uuid
      description: Universally Unique Identifier (UUID) version 4, as described in IETC RFC 4122 "Universally Unique Identifier (UUID) URN Namespace.
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}'  
    success:
      type: object
      properties:
        id:
          type: string
          description: Customer defined message key for support purposes
          example: a27f873f-663e-49c2-a688-10fd1c5ffe11
        status:
          type: string
          description: Customer defined message status, e.g. "Notification Received"
          example: Notification Received
    error_response:
      type: array
      description: Generic error response that returns one or more errors.
      items:
        type: object
        required:
        - status
        - title
        - detail
        properties:
          status:
            type: string
            description: HTTP status code associated with this error
          title:
            type: string
            description: Short description associated with this error
          detail:
            type: string
            description: A detailed description associated with this error
tags:
  - name: Payment Notification
    description: >-
        API publishes a notification when settled funds sent via NPP are credited to a
        customers ANZ bank account.
  - name: bank_to_customer_debit_credit_notification
    description: <SchemaDefinition schemaRef="#/components/schemas/bank_to_customer_debit_credit_notification" />
    x-displayName: BankToCustomerDebitCreditNotification
x-tagGroups:
  - name: Paths
    tags: 
      - Payment Notification
  - name: Models
    tags: 
      - bank_to_customer_debit_credit_notification
